{
    "pipes": [],
    "interfaces": [
        {
            "name": "AgGridContext",
            "id": "interface-AgGridContext-cbfd968db2755b2e9f423af1fc162539ccd1236600036ab0b168983dc1ef223ba69bc693840bc34ee8178af9233d3480320c2ed9f69d38038d5288a2b80e8ea0",
            "file": "projects/extension-packages/ag-grid-angular/src/lib/ag-grid-extension/interfaces/ag-grid-context.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AgGridToolbarAction } from './ag-grid-toolbar-action';\n\nexport interface AgGridContext {\n  actions?: AgGridToolbarAction[];\n  quickFilterText?: string;\n}\n",
            "properties": [
                {
                    "name": "actions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AgGridToolbarAction[]",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "quickFilterText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "AgGridToolbarAction",
            "id": "interface-AgGridToolbarAction-7112f4b285a5f838031425861596f679dd31fa8007171285131ff942f3c2c23a86290708833de8960759a6f3c3912e54c76c30e717323609961828cf1a3210c4",
            "file": "projects/extension-packages/ag-grid-angular/src/lib/ag-grid-extension/interfaces/ag-grid-toolbar-action.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AgGridEvent } from 'ag-grid-community';\n\nexport interface AgGridToolbarAction<TData = any, TContext = any> {\n  /** Action color */\n  color?: string;\n  /** Default: `false`. */\n  disabled?: boolean;\n  /** If no icon is provided, the `ToolbarAction` will be treated as a separator. */\n  icon?: string;\n  /** ID for toolbar action, used to set html id. */\n  id?: string;\n  /** Tooltip text. */\n  tooltip?: string;\n  /** Tooltop text for disabled action */\n  tooltipDisabled?: string;\n  /** Arrow function to execute on click. */\n  clickFn?: (event: AgGridToolbarActionClickParams<TData, TContext>) => void;\n}\n\nexport interface AgGridToolbarActionClickParams<TData = any, TContext = any> {\n  /** AgGrid event */\n  event: AgGridEvent<TData, TContext>;\n  /** Reference to the clicked action */\n  action: AgGridToolbarAction<TData, TContext>;\n}\n",
            "properties": [
                {
                    "name": "clickFn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": true,
                    "description": "<p>Arrow function to execute on click.</p>\n",
                    "line": 17,
                    "rawdescription": "\nArrow function to execute on click."
                },
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "<p>Action color</p>\n",
                    "line": 5,
                    "rawdescription": "\nAction color"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "<p>Default: <code>false</code>.</p>\n",
                    "line": 7,
                    "rawdescription": "\nDefault: `false`."
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "<p>If no icon is provided, the <code>ToolbarAction</code> will be treated as a separator.</p>\n",
                    "line": 9,
                    "rawdescription": "\nIf no icon is provided, the `ToolbarAction` will be treated as a separator."
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "<p>ID for toolbar action, used to set html id.</p>\n",
                    "line": 11,
                    "rawdescription": "\nID for toolbar action, used to set html id."
                },
                {
                    "name": "tooltip",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "<p>Tooltip text.</p>\n",
                    "line": 13,
                    "rawdescription": "\nTooltip text."
                },
                {
                    "name": "tooltipDisabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "<p>Tooltop text for disabled action</p>\n",
                    "line": 15,
                    "rawdescription": "\nTooltop text for disabled action"
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "AgGridToolbarActionClickParams",
            "id": "interface-AgGridToolbarActionClickParams-7112f4b285a5f838031425861596f679dd31fa8007171285131ff942f3c2c23a86290708833de8960759a6f3c3912e54c76c30e717323609961828cf1a3210c4",
            "file": "projects/extension-packages/ag-grid-angular/src/lib/ag-grid-extension/interfaces/ag-grid-toolbar-action.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AgGridEvent } from 'ag-grid-community';\n\nexport interface AgGridToolbarAction<TData = any, TContext = any> {\n  /** Action color */\n  color?: string;\n  /** Default: `false`. */\n  disabled?: boolean;\n  /** If no icon is provided, the `ToolbarAction` will be treated as a separator. */\n  icon?: string;\n  /** ID for toolbar action, used to set html id. */\n  id?: string;\n  /** Tooltip text. */\n  tooltip?: string;\n  /** Tooltop text for disabled action */\n  tooltipDisabled?: string;\n  /** Arrow function to execute on click. */\n  clickFn?: (event: AgGridToolbarActionClickParams<TData, TContext>) => void;\n}\n\nexport interface AgGridToolbarActionClickParams<TData = any, TContext = any> {\n  /** AgGrid event */\n  event: AgGridEvent<TData, TContext>;\n  /** Reference to the clicked action */\n  action: AgGridToolbarAction<TData, TContext>;\n}\n",
            "properties": [
                {
                    "name": "action",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AgGridToolbarAction<TData | TContext>",
                    "optional": false,
                    "description": "<p>Reference to the clicked action</p>\n",
                    "line": 24,
                    "rawdescription": "\nReference to the clicked action"
                },
                {
                    "name": "event",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AgGridEvent<TData | TContext>",
                    "optional": false,
                    "description": "<p>AgGrid event</p>\n",
                    "line": 22,
                    "rawdescription": "\nAgGrid event"
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [
        {
            "name": "DatasourceService",
            "id": "injectable-DatasourceService-20768f8c74c72672a0bdba2ff9d08abd0f529bcda236a422ab609fe4a1773d4660e3cebfde87b3220fe8c2312c67e9f0d21f62a50e506bf77fa53e1f40270bcc",
            "file": "projects/extension-packages/ag-grid-angular/src/stories/story-helpers/datasource.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "createFakeServer",
                    "args": [
                        {
                            "name": "dataCount",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{ getData: (request: IServerSideGetRowsRequest) => { success: boolean; rows: any; }; }",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "dataCount",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createServerSideDatasource",
                    "args": [
                        {
                            "name": "dataCount",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "100"
                        }
                    ],
                    "optional": false,
                    "returnType": "IServerSideDatasource",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "dataCount",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "100",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "generateItems",
                    "args": [
                        {
                            "name": "dataCount",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any[]",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "dataCount",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport {\n  IServerSideDatasource,\n  IServerSideGetRowsRequest,\n} from 'ag-grid-community';\n@Injectable({ providedIn: 'root' })\nexport class DatasourceService {\n  constructor() {}\n\n  createServerSideDatasource(dataCount = 100): IServerSideDatasource {\n    const server = this.createFakeServer(dataCount);\n    return {\n      getRows: (params) => {\n        console.log('[Datasource] - rows requested by grid: ', params.request);\n        // get data for request from our fake server\n        const response = server.getData(params.request);\n        // simulating real server call with a 500ms delay\n        setTimeout(function () {\n          if (response.success) {\n            // supply rows for requested block to grid\n            params.success({ rowData: response.rows });\n          } else {\n            params.fail();\n          }\n        }, 500);\n      },\n    };\n  }\n\n  generateItems(dataCount: number): any[] {\n    const items: any[] = [];\n    for (let i = 0; i <= dataCount; i++) {\n      const brand = generateRandomBrand();\n      items.push({\n        id: i,\n        brand: brand,\n        isNew: Math.random() > 0.5,\n        model: generateRandomModel(brand),\n        price: generateRandomPrice(),\n      });\n    }\n    return items;\n  }\n\n  private createFakeServer(dataCount: number) {\n    const items = this.generateItems(dataCount);\n    return {\n      getData: (request: IServerSideGetRowsRequest) => {\n        // in this simplified fake server all rows are contained in an array\n        const requestedRows = items.slice(request.startRow, request.endRow);\n        return {\n          success: true,\n          rows: requestedRows,\n        };\n      },\n    };\n  }\n}\n// Generate 97 more items with random data\nconst items = [];\nfor (let i = 0; i <= 100; i++) {\n  const brand = generateRandomBrand();\n  items.push({\n    id: i,\n    brand: brand,\n    isNew: Math.random() > 0.5,\n    model: generateRandomModel(brand),\n    price: generateRandomPrice(),\n  });\n}\n\n// Function to generate random make\nfunction generateRandomBrand() {\n  const brand = ['BMW', 'Honda', 'Tesla', 'Volkswagen'];\n  return brand[Math.floor(Math.random() * brand.length)];\n}\n\n// Function to generate random model\nfunction generateRandomModel(brand: string) {\n  const allModels: any = {\n    BMW: ['X1', 'X2', 'X3', 'X4', 'X5', 'X6', 'X7'],\n    Honda: ['Accord', 'Civic'],\n    Tesla: ['Model S', 'Model 3', 'Model X', 'Model Y', 'Cybertruck'],\n    Volkswagen: ['e-Up', 'Golf', 'Polo'],\n  };\n  const models = allModels[brand];\n  return models[Math.floor(Math.random() * models.length)];\n}\n\n// Function to generate random price\nfunction generateRandomPrice() {\n  const price = Math.floor(Math.random() * 50000) + 20000;\n  return Math.round(price / 100) * 100;\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 7
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "GridOptionsService",
            "id": "injectable-GridOptionsService-3d0b0ca070f0a009eb0aec8b3940dc56f24e86bc927fb9cac2c3eeeb1fce1c8bb28a859349b8e3841ca931b2cefcfd1cfec1b156589bbf9e26ef70b8b37fef95",
            "file": "projects/extension-packages/ag-grid-angular/src/stories/story-helpers/grid-options.service.ts",
            "properties": [
                {
                    "name": "clientSide",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "core",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "getColDefs",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "getDefaultColDef",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "serverSide",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { ColDef, GridOptions } from 'ag-grid-community';\n\n@Injectable({ providedIn: 'root' })\nexport class GridOptionsService {\n  getDefaultColDef = (): ColDef => {\n    return { editable: true, sortable: true };\n  };\n\n  getColDefs = (): ColDef[] => [\n    { field: 'id', width: 55 },\n    { field: 'brand' },\n    { field: 'model' },\n    { field: 'price', width: 90 },\n    { field: 'isNew', width: 80 },\n  ];\n\n  core = (): GridOptions => {\n    return {\n      defaultColDef: this.getDefaultColDef(),\n      enableCellChangeFlash: true,\n      getRowId: (params) => {\n        return params.data['id'];\n      },\n      rowSelection: 'single',\n      undoRedoCellEditing: true,\n    };\n  };\n\n  clientSide = (): GridOptions => {\n    return {\n      ...this.core(),\n      rowModelType: 'clientSide',\n    };\n  };\n\n  serverSide = (): GridOptions => {\n    return {\n      ...this.core(),\n      rowModelType: 'serverSide',\n    };\n  };\n}\n",
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "Utils",
            "id": "class-Utils-6bf4b3d20543a12a4db0e76530bd9cf294a0d7f080e54c6ead7e6eca74eb7eb15e251019ce0c6a8e0c989b97ac2f9314884f4e7e04185382c4a172133e21d7dd",
            "file": "projects/extension-packages/ag-grid-angular/src/stories/story-helpers/utils.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export default class Utils {\n  static getRandomColor() {\n    const colorNames = ['Red', 'Green', 'Blue', 'Yellow', 'Orange'];\n    const randomIndex = Math.floor(Math.random() * colorNames.length);\n    return colorNames[randomIndex];\n  }\n}\n",
            "inputsClass": [],
            "outputsClass": [],
            "properties": [],
            "methods": [
                {
                    "name": "getRandomColor",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 2,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        126
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AgGridExtensionComponent",
            "id": "component-AgGridExtensionComponent-260693a6615d3f9122c10926001a4d5703f9c310390bf53db074aa7911984c306af56f7c611bc64f41704236c3274ed653dbba0747aaaa448244b97ac49e7298",
            "file": "projects/extension-packages/ag-grid-angular/src/lib/ag-grid-extension/ag-grid-extension.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ag-grid-extension",
            "styleUrls": [
                "./ag-grid-extension.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./ag-grid-extension.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "actions",
                    "defaultValue": "actionsSets.standard",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nToolbar actions",
                    "description": "<p>Toolbar actions</p>\n",
                    "line": 107,
                    "type": "AgGridToolbarAction[]",
                    "decorators": []
                },
                {
                    "name": "debounceSearch",
                    "defaultValue": "500",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nDebounce in ms for seach input",
                    "description": "<p>Debounce in ms for seach input</p>\n",
                    "line": 109,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "disableSearch",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nDisable search field",
                    "description": "<p>Disable search field</p>\n",
                    "line": 111,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "enableSearch",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nEnable search field",
                    "description": "<p>Enable search field</p>\n",
                    "line": 113,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "placeholderSearch",
                    "defaultValue": "'Search...'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nSeach placeholdet text",
                    "description": "<p>Seach placeholdet text</p>\n",
                    "line": 115,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "agGrid",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AgGridAngular",
                    "optional": false,
                    "description": "",
                    "line": 117,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "AgGridAngular"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 130,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Extends ag-grid with a toolbar, search and actions.</p>\n<h3>Prerequisites</h3>\n<ul>\n<li><a href=\"https://www.ag-grid.com/angular-data-grid/getting-started/\">Ag Grid Angular</a></li>\n<li>(Optional) Add icon-font(s) of your choice. Must be included in your html and css.<ul>\n<li>Default: <code>ag-icon</code></li>\n</ul>\n</li>\n</ul>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">&lt;!-- Google icon-font: https://developers.google.com/fonts/docs/material_icons --&gt;\n&lt;link href=&quot;https://fonts.googleapis.com/icon?family=Material+Icons&quot; rel=&quot;stylesheet&quot; /&gt;</code></pre></div><h2>Features:</h2>\n<ul>\n<li>Quick search</li>\n<li>Toolbar actions<ul>\n<li>Clickable icons</li>\n<li>Add icon-font of your choice.<ul>\n<li>Default: <code>material-icons</code></li>\n<li>Setup: <a href=\"https://developers.google.com/fonts/docs/material_icons\">https://developers.google.com/fonts/docs/material_icons</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Toolbr content projection with ng-content<ul>\n<li>Content placeholders (selectors)<ul>\n<li><code>toolbarLeft</code> =&gt; Toolbar left</li>\n<li><code>toolbarCenter</code> =&gt; Toolbar center</li>\n<li><code>toolbarRight</code> =&gt; Toolbar right</li>\n<li><code>actionsLeft</code> =&gt; pre actions</li>\n<li><code>actionsRight</code> =&gt; post actions</li>\n</ul>\n</li>\n<li>Single-slot</li>\n</ul>\n</li>\n<li>Adapts to ag-grid themes</li>\n</ul>\n<h2>Component overview</h2>\n<p><strong>Class:</strong> <code>AgGridExtensionComponent</code></p>\n<p><strong>Constants:</strong></p>\n<ul>\n<li><code>actionsSets: AgGridToolbarAction[]</code> =&gt; Predefined sets of actions</li>\n<li><code>presetActions: AgGridToolbarAction</code> =&gt; Predefined single actions. Fit columns, reset columns, cvs export etc</li>\n</ul>\n<p><strong>Interfaces:</strong></p>\n<ul>\n<li><code>AgGridContext</code> =&gt; Properties this component adds to <code>gridOptions.context</code></li>\n<li><code>AgGridToolbarAction</code> =&gt; Properties for a toolbar action</li>\n</ul>\n<p><strong>Module:</strong> <code>import { AgGridExtensionModule } from &#39;@extension/ag-grid-angular&#39;;</code></p>\n<p><strong>Selector:</strong> <code>ag-grid-extension</code></p>\n<h3>Toolbar search</h3>\n<h4>Client side</h4>\n<p>Works out of the box for client side grids.</p>\n<h4>Other row models</h4>\n<p>Use <code>context.quickFilterText</code> in custom datasource implementation <code>IServerSideDatasource</code> like below.</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-ts\">  // server-side example\n  export class ExampleDatasource implements IServerSideDatasource {\n      getRows(params: IServerSideGetRowsParams): void {\n        const { quickFilterText } = params.context as AgGridToolbarContext;\n        // Then use `quickFilterText` in backend call etc..\n      }\n  }</code></pre></div><h3>Code example</h3>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-ts\">&#64;Component({\n  standalone: true,\n  selector: &#39;app-demo-grid&#39;,\n  imports: [AgGridExtensionModule],\n  template: `\n    &lt;ag-grid-extension class=&quot;ag-theme-balham&quot; [actions]=&quot;actions&quot;&gt;\n      &lt;ag-grid-angular [gridOptions]=&quot;gridOptions&quot;&gt;&lt;/ag-grid-angular&gt;\n    &lt;/ag-grid-extension&gt;\n  `,\n})\nexport class DemoGridComponent {\n  actions: AgGridToolbarAction[];\n  gridOptions: GridOptions;\n}</code></pre></div>",
            "rawdescription": "\n\nExtends ag-grid with a toolbar, search and actions.\n\n### Prerequisites\n\n- [Ag Grid Angular](https://www.ag-grid.com/angular-data-grid/getting-started/)\n- (Optional) Add icon-font(s) of your choice. Must be included in your html and css.\n  - Default: `ag-icon`\n\n```html\n<!-- Google icon-font: https://developers.google.com/fonts/docs/material_icons -->\n<link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\" />\n```\n\n## Features:\n- Quick search\n- Toolbar actions\n  - Clickable icons\n  - Add icon-font of your choice.\n    - Default: `material-icons`\n    - Setup: https://developers.google.com/fonts/docs/material_icons\n- Toolbr content projection with ng-content\n  - Content placeholders (selectors)\n    - `toolbarLeft` => Toolbar left\n    - `toolbarCenter` => Toolbar center\n    - `toolbarRight` => Toolbar right\n    - `actionsLeft` => pre actions\n    - `actionsRight` => post actions\n  - Single-slot\n- Adapts to ag-grid themes\n\n## Component overview\n\n**Class:** `AgGridExtensionComponent`\n\n**Constants:**\n- `actionsSets: AgGridToolbarAction[]` => Predefined sets of actions\n- `presetActions: AgGridToolbarAction` => Predefined single actions. Fit columns, reset columns, cvs export etc\n\n**Interfaces:**\n- `AgGridContext` => Properties this component adds to `gridOptions.context`\n- `AgGridToolbarAction` => Properties for a toolbar action\n\n**Module:** `import { AgGridExtensionModule } from '@extension/ag-grid-angular';`\n\n**Selector:** `ag-grid-extension`\n\n### Toolbar search\n\n#### Client side\n\nWorks out of the box for client side grids.\n\n#### Other row models\n\nUse `context.quickFilterText` in custom datasource implementation `IServerSideDatasource` like below.\n\n```ts\n  // server-side example\n  export class ExampleDatasource implements IServerSideDatasource {\n      getRows(params: IServerSideGetRowsParams): void {\n        const { quickFilterText } = params.context as AgGridToolbarContext;\n        // Then use `quickFilterText` in backend call etc..\n      }\n  }\n```\n\n### Code example\n\n```ts\n@Component({\n  standalone: true,\n  selector: 'app-demo-grid',\n  imports: [AgGridExtensionModule],\n  template: `\n    <ag-grid-extension class=\"ag-theme-balham\" [actions]=\"actions\">\n      <ag-grid-angular [gridOptions]=\"gridOptions\"></ag-grid-angular>\n    </ag-grid-extension>\n  `,\n})\nexport class DemoGridComponent {\n  actions: AgGridToolbarAction[];\n  gridOptions: GridOptions;\n}\n```\n",
            "type": "component",
            "sourceCode": "import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  Input,\n} from '@angular/core';\nimport { AgGridAngular } from 'ag-grid-angular';\nimport { AgGridToolbarAction } from './interfaces/ag-grid-toolbar-action';\nimport { actionsSets } from './actions-sets';\nimport { AgGridEvent } from 'ag-grid-community';\n\n/**\n * Extends ag-grid with a toolbar, search and actions.\n *\n * ### Prerequisites\n *\n * - [Ag Grid Angular](https://www.ag-grid.com/angular-data-grid/getting-started/)\n * - (Optional) Add icon-font(s) of your choice. Must be included in your html and css.\n *   - Default: `ag-icon`\n *\n * ```html\n * <!-- Google icon-font: https://developers.google.com/fonts/docs/material_icons -->\n * <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\" />\n * ```\n *\n * ## Features:\n * - Quick search\n * - Toolbar actions\n *   - Clickable icons\n *   - Add icon-font of your choice.\n *     - Default: `material-icons`\n *     - Setup: https://developers.google.com/fonts/docs/material_icons\n * - Toolbr content projection with ng-content\n *   - Content placeholders (selectors)\n *     - `toolbarLeft` => Toolbar left\n *     - `toolbarCenter` => Toolbar center\n *     - `toolbarRight` => Toolbar right\n *     - `actionsLeft` => pre actions\n *     - `actionsRight` => post actions\n *   - Single-slot\n * - Adapts to ag-grid themes\n *\n * ## Component overview\n *\n * **Class:** `AgGridExtensionComponent`\n *\n * **Constants:**\n * - `actionsSets: AgGridToolbarAction[]` => Predefined sets of actions\n * - `presetActions: AgGridToolbarAction` => Predefined single actions. Fit columns, reset columns, cvs export etc\n *\n * **Interfaces:**\n * - `AgGridContext` => Properties this component adds to `gridOptions.context`\n * - `AgGridToolbarAction` => Properties for a toolbar action\n *\n * **Module:** `import { AgGridExtensionModule } from '@extension/ag-grid-angular';`\n *\n * **Selector:** `ag-grid-extension`\n *\n * ### Toolbar search\n *\n * #### Client side\n *\n * Works out of the box for client side grids.\n *\n * #### Other row models\n *\n * Use `context.quickFilterText` in custom datasource implementation `IServerSideDatasource` like below.\n *\n * ```ts\n *   // server-side example\n *   export class ExampleDatasource implements IServerSideDatasource {\n *       getRows(params: IServerSideGetRowsParams): void {\n *         const { quickFilterText } = params.context as AgGridToolbarContext;\n *         // Then use `quickFilterText` in backend call etc..\n *       }\n *   }\n * ```\n *\n * ### Code example\n *\n * ```ts\n * @Component({\n *   standalone: true,\n *   selector: 'app-demo-grid',\n *   imports: [AgGridExtensionModule],\n *   template: `\n *     <ag-grid-extension class=\"ag-theme-balham\" [actions]=\"actions\">\n *       <ag-grid-angular [gridOptions]=\"gridOptions\"></ag-grid-angular>\n *     </ag-grid-extension>\n *   `,\n * })\n * export class DemoGridComponent {\n *   actions: AgGridToolbarAction[];\n *   gridOptions: GridOptions;\n * }\n * ```\n */\n@Component({\n  selector: 'ag-grid-extension',\n  templateUrl: './ag-grid-extension.component.html',\n  styleUrls: ['./ag-grid-extension.component.scss'],\n  host: { class: 'ag-theme-extension' },\n})\nexport class AgGridExtensionComponent implements AfterViewInit {\n  /** Toolbar actions */\n  @Input() actions: AgGridToolbarAction[] = actionsSets.standard;\n  /** Debounce in ms for seach input */\n  @Input() debounceSearch = 500;\n  /** Disable search field*/\n  @Input() disableSearch = false;\n  /** Enable search field*/\n  @Input() enableSearch = true;\n  /** Seach placeholdet text */\n  @Input() placeholderSearch = 'Search...';\n\n  @ContentChild(AgGridAngular) agGrid!: AgGridAngular;\n\n  constructor(private cdr: ChangeDetectorRef) {}\n\n  get context(): any {\n    return this.agGrid.context || this.agGrid.gridOptions?.context;\n  }\n\n  get event(): AgGridEvent {\n    const context = this.agGrid.context || this.agGrid.gridOptions?.context;\n    return { api: this.agGrid.api, context } as AgGridEvent;\n  }\n\n  ngAfterViewInit(): void {\n    if (!this.context) {\n      const context = { actions: this.actions };\n      this.agGrid.api.setGridOption('context', context);\n    } else {\n      this.context.actions = this.actions;\n    }\n    // agGrid changes after initializing itself\n    this.cdr.detectChanges();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  display: flex;\n  height: 100%;\n  flex-direction: column;\n  ::ng-deep ag-grid-angular {\n    height: 100%;\n  }\n  ::ng-deep .ag-root-wrapper {\n    border-top-left-radius: 0px;\n    border-top-right-radius: 0px;\n  }\n}\n\n.ag-grid-content {\n  flex-grow: 1;\n}\n\n::ng-deep .toolbar-action-separator {\n  border-right: 1px solid var(--ag-border-color);\n  height: 22px;\n}\n::ng-deep .ag-aria-description-container {\n  display: none;\n}\n",
                    "styleUrl": "./ag-grid-extension.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 117,
                "jsdoctags": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "AfterViewInit"
            ],
            "accessors": {
                "context": {
                    "name": "context",
                    "getSignature": {
                        "name": "context",
                        "type": "any",
                        "returnType": "any",
                        "line": 121
                    }
                },
                "event": {
                    "name": "event",
                    "getSignature": {
                        "name": "event",
                        "type": "",
                        "returnType": "AgGridEvent",
                        "line": 125
                    }
                }
            },
            "templateData": "<ag-grid-toolbar\n  [agGrid]=\"agGrid\"\n  [debounceSearch]=\"debounceSearch\"\n  [disableSearch]=\"disableSearch\"\n  [enableSearch]=\"enableSearch\"\n  [placeholderSearch]=\"placeholderSearch\"\n>\n  <ng-content select=\"[toolbarLeft]\" toolbarLeft></ng-content>\n  <ng-content select=\"[toolbarCenter]\" toolbarCenter></ng-content>\n  <ng-content select=\"[toolbarRight]\" toolbarRight></ng-content>\n  <!-- Actions -->\n  <ng-content select=\"[actionsLeft]\" toolbarRight></ng-content>\n  <ng-container *ngFor=\"let action of actions\" toolbarRight>\n    <ng-container *ngIf=\"!action?.icon\">\n      <span class=\"toolbar-action-separator\"></span>\n    </ng-container>\n\n    <div [title]=\"action.disabled ? action.tooltipDisabled || '' : ''\">\n      <ag-grid-toolbar-action\n        *ngIf=\"action?.icon\"\n        [color]=\"action?.color\"\n        [disabled]=\"action?.disabled || false\"\n        [icon]=\"action.icon\"\n        [id]=\"action.id\"\n        [tooltip]=\"action.tooltip || ''\"\n        (click)=\"action?.clickFn?.({ action, event })\"\n      ></ag-grid-toolbar-action>\n    </div>\n  </ng-container>\n  <ng-content select=\"[actionsRight]\" toolbarRight></ng-content>\n  <!-- Actions END -->\n</ag-grid-toolbar>\n<div class=\"ag-grid-content\">\n  <ng-content>\n    <!-- ag-grid-angular -->\n  </ng-content>\n</div>\n"
        },
        {
            "name": "AgGridToolbarActionComponent",
            "id": "component-AgGridToolbarActionComponent-ee609bfa76550de342570002e8236674f520c52b12ad9261289a759d46c72051c1da1b6cc5a836378258a761fa4e0e455071a70b452b52bb41376cc2e02e4172",
            "file": "projects/extension-packages/ag-grid-angular/src/lib/ag-grid-extension/components/ag-grid-toolbar-action/ag-grid-toolbar-action.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ag-grid-toolbar-action",
            "styleUrls": [
                "./ag-grid-toolbar-action.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./ag-grid-toolbar-action.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nIcon name. Example `home`\n\n\n### Requirements\n\nNeeds to have a font class included in your html and css.\n\n**With Google icons:**\n```html\n<!-- Add this to your html: -->\n<html>\n  <head>\n    <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\" />\n  </head>\n<html>\n\nAnd set `iconFont: 'material-icons'`\n```\n",
                    "description": "<p>Icon name. Example <code>home</code></p>\n<h3>Requirements</h3>\n<p>Needs to have a font class included in your html and css.</p>\n<p><strong>With Google icons:</strong></p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">&lt;!-- Add this to your html: --&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;link href=&quot;https://fonts.googleapis.com/icon?family=Material+Icons&quot; rel=&quot;stylesheet&quot; /&gt;\n  &lt;/head&gt;\n&lt;html&gt;\n\nAnd set `iconFont: &#39;material-icons&#39;`</code></pre></div>",
                    "line": 39,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "iconFont",
                    "defaultValue": "'ag-icon'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nA font class for the icon. Default: `ag-icon`.\n\nThe font needs to be included in your html and css.\n\n**Example font setup:**\n- https://developers.google.com/fonts/docs/material_icons#icon_font_for_the_web",
                    "description": "<p>A font class for the icon. Default: <code>ag-icon</code>.</p>\n<p>The font needs to be included in your html and css.</p>\n<p><strong>Example font setup:</strong></p>\n<ul>\n<li><a href=\"https://developers.google.com/fonts/docs/material_icons#icon_font_for_the_web\">https://developers.google.com/fonts/docs/material_icons#icon_font_for_the_web</a></li>\n</ul>\n",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nID for toolbar action, used to set html id",
                    "description": "<p>ID for toolbar action, used to set html id</p>\n",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tooltip",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'ag-grid-toolbar-action',\n  templateUrl: './ag-grid-toolbar-action.component.html',\n  styleUrls: ['./ag-grid-toolbar-action.component.scss'],\n})\nexport class AgGridToolbarActionComponent {\n  @Input() color?: string;\n  @Input() disabled?: boolean;\n  /** A font class for the icon. Default: `ag-icon`.\n   *\n   * The font needs to be included in your html and css.\n   *\n   * **Example font setup:**\n   * - https://developers.google.com/fonts/docs/material_icons#icon_font_for_the_web */\n  @Input() iconFont = 'ag-icon';\n  /** ID for toolbar action, used to set html id */\n  @Input() id?: string;\n  /** Icon name. Example `home`\n   *\n   *\n   * ### Requirements\n   *\n   * Needs to have a font class included in your html and css.\n   *\n   * **With Google icons:**\n   * ```html\n   * <!-- Add this to your html: -->\n   * <html>\n   *   <head>\n   *     <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\" />\n   *   </head>\n   * <html>\n   *\n   * And set `iconFont: 'material-icons'`\n   * ```\n   */\n  @Input() icon?: string;\n  @Input() tooltip?: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  // Prevent click event on \"host\" when .disabled\n  display: contents;\n}\n\n.toolbar-action {\n  color: var(--ag-secondary-foreground-color);\n  font-size: 24px;\n  height: unset;\n  width: unset;\n  padding: 8px;\n  user-select: none;\n  &.disabled {\n    pointer-events: none;\n    color: var(\n      --ag-disabled-foreground-color,\n      --ag-input-disabled-border-color\n    );\n  }\n  &:hover {\n    cursor: pointer;\n    border-radius: 3px;\n    background: var(--ag-input-disabled-border-color);\n  }\n  &:active {\n    background: var(--ag-border-color);\n  }\n}\n",
                    "styleUrl": "./ag-grid-toolbar-action.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<span\n  class=\"toolbar-action\"\n  [class.disabled]=\"disabled\"\n  [id]=\"id\"\n  [ngClass]=\"iconFont\"\n  [style.color]=\"disabled ? '' : color\"\n  [title]=\"tooltip\"\n>\n  {{ icon }}<ng-content></ng-content>\n</span>\n"
        },
        {
            "name": "AgGridToolbarComponent",
            "id": "component-AgGridToolbarComponent-7d0c9b86d375e8f9f335a5b00cdae72b1b337e1478f891094497a0c784eb0ba12723bd6a5daeafc865ce49ae0bc3f8deb3301110678ee9e7ec043c33d3242b63",
            "file": "projects/extension-packages/ag-grid-angular/src/lib/ag-grid-extension/components/ag-grid-toolbar/ag-grid-toolbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ag-grid-toolbar",
            "styleUrls": [
                "./ag-grid-toolbar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./ag-grid-toolbar.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "agGrid",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "AgGridAngular",
                    "decorators": []
                },
                {
                    "name": "debounceSearch",
                    "defaultValue": "500",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "disableSearch",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "enableSearch",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "placeholderSearch",
                    "defaultValue": "'Search...'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { AgGridAngular } from 'ag-grid-angular';\n\n@Component({\n  selector: 'ag-grid-toolbar',\n  templateUrl: './ag-grid-toolbar.component.html',\n  styleUrls: ['./ag-grid-toolbar.component.scss'],\n})\nexport class AgGridToolbarComponent {\n  @Input() agGrid!: AgGridAngular;\n  @Input() debounceSearch = 500;\n  @Input() disableSearch = false;\n  @Input() enableSearch = true;\n  @Input() placeholderSearch = 'Search...';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".ag-grid-toolbar {\n  align-items: center;\n  background: var(--ag-header-background-color);\n  border: var(--ag-borders) var(--ag-border-color);\n  border-top-left-radius: var(--ag-wrapper-border-radius);\n  border-top-right-radius: var(--ag-wrapper-border-radius);\n  border-bottom: none;\n  display: flex;\n  height: 48px;\n  overflow-x: auto;\n}\n.ag-grid-toolbar-content {\n  align-items: center;\n  display: flex;\n  gap: 8px;\n  justify-content: space-between;\n  padding: 0px 8px;\n  width: 100%;\n\n  &-left {\n    align-items: center;\n    display: flex;\n    gap: 8px;\n  }\n  &-center {\n    align-items: center;\n    display: flex;\n    gap: 8px;\n  }\n  &-right {\n    align-items: center;\n    display: flex;\n  }\n}\n",
                    "styleUrl": "./ag-grid-toolbar.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"ag-grid-toolbar\">\n  <div class=\"ag-grid-toolbar-content\">\n    <div class=\"ag-grid-toolbar-content-left\">\n      <ag-grid-toolbar-search\n        *ngIf=\"enableSearch\"\n        [agGrid]=\"agGrid\"\n        [debounceTime]=\"debounceSearch\"\n        [disabled]=\"disableSearch\"\n        [placeholder]=\"placeholderSearch\"\n      ></ag-grid-toolbar-search>\n      <ng-content select=\"[toolbarLeft]\"></ng-content>\n    </div>\n    <div class=\"ag-grid-toolbar-content-center\">\n      <ng-content select=\"[toolbarCenter]\"></ng-content>\n    </div>\n    <div class=\"ag-grid-toolbar-content-right\">\n      <ng-content select=\"[toolbarRight]\"></ng-content>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "AgGridToolbarSearchComponent",
            "id": "component-AgGridToolbarSearchComponent-d84d9243eec792d03835074819ef619f21511f108e7ada551ef1a81785df0d600bd63011d9a7081290309443251bd5b96d55a99187e4a7c50ad687919d1cbd5d",
            "file": "projects/extension-packages/ag-grid-angular/src/lib/ag-grid-extension/components/ag-grid-toolbar-search/ag-grid-toolbar-search.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ag-grid-toolbar-search",
            "styleUrls": [
                "./ag-grid-toolbar-search.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./ag-grid-toolbar-search.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "agGrid",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "AgGridAngular",
                    "decorators": []
                },
                {
                    "name": "debounceTime",
                    "defaultValue": "500",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "'Search...'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onSearch",
                    "args": [
                        {
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setQuickFilter",
                    "args": [
                        {
                            "name": "term",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "term",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { AgGridAngular } from 'ag-grid-angular';\n\nlet timer: any;\n@Component({\n  selector: 'ag-grid-toolbar-search',\n  templateUrl: './ag-grid-toolbar-search.component.html',\n  styleUrls: ['./ag-grid-toolbar-search.component.scss'],\n})\nexport class AgGridToolbarSearchComponent {\n  @Input() agGrid!: AgGridAngular;\n  @Input() debounceTime = 500;\n  @Input() disabled = false;\n  @Input() placeholder = 'Search...';\n\n  get context(): { quickFilterText: string } {\n    return this.agGrid.context || this.agGrid.gridOptions?.context;\n  }\n\n  onSearch({ target }: any) {\n    const { api } = this.agGrid;\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      const type = api.getModel().getType();\n      if (type === 'serverSide') {\n        this.setQuickFilter(target.value);\n        api.onFilterChanged();\n      } else {\n        api.setQuickFilter(target.value);\n        this.setQuickFilter(target.value);\n      }\n      if (\n        this.agGrid.gridOptions?.rowSelection !== 'multiple' &&\n        this.agGrid.rowSelection !== 'multiple'\n      ) {\n        api.deselectAll();\n      }\n    }, this.debounceTime);\n  }\n\n  setQuickFilter(term: string) {\n    if (this.context) {\n      this.context.quickFilterText = term;\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "input {\n  border: 1px solid var(--ag-border-color);\n  border-radius: 4px;\n  height: 30px;\n  padding: 0px 8px 0px 28px;\n  &:hover:not(:disabled) {\n    border-color: var(--ag-range-selection-border-color);\n  }\n  &:focus-visible {\n    outline: none;\n    border-color: var(--ag-range-selection-border-color);\n  }\n  &:disabled {\n    background-color: var(--ag-input-disabled-background-color);\n  }\n  background: white\n    url(\"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' fill='gray' width='16' height='16' viewBox='0 0 16 16'><path d='M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z' ></path></svg>\")\n    no-repeat 8px center;\n}\n",
                    "styleUrl": "./ag-grid-toolbar-search.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "accessors": {
                "context": {
                    "name": "context",
                    "getSignature": {
                        "name": "context",
                        "type": "literal type",
                        "returnType": "literal type",
                        "line": 16
                    }
                }
            },
            "templateData": "<input\n  type=\"search\"\n  [disabled]=\"disabled\"\n  [placeholder]=\"placeholder\"\n  (keyup)=\"onSearch($event)\"\n  (search)=\"onSearch($event)\"\n/>\n"
        }
    ],
    "modules": [
        {
            "name": "AgGridExtensionModule",
            "id": "module-AgGridExtensionModule-d1174d04eaab1375dfe7f51447aa4c7b81187a591885c3cdf2249c073978f74e3f4380da7fe910d42c12147675245d5a7111726d631fbc47ebe0fc5b0934c79b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/extension-packages/ag-grid-angular/src/lib/ag-grid-extension/ag-grid-extension.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AgGridExtensionComponent } from './ag-grid-extension.component';\nimport { AgGridToolbarComponent } from './components/ag-grid-toolbar/ag-grid-toolbar.component';\nimport { AgGridToolbarActionComponent } from './components/ag-grid-toolbar-action/ag-grid-toolbar-action.component';\nimport { AgGridToolbarSearchComponent } from './components/ag-grid-toolbar-search/ag-grid-toolbar-search.component';\n\n@NgModule({\n  declarations: [\n    AgGridExtensionComponent,\n    AgGridToolbarComponent,\n    AgGridToolbarActionComponent,\n    AgGridToolbarSearchComponent,\n  ],\n  exports: [AgGridExtensionComponent, AgGridToolbarActionComponent],\n  imports: [CommonModule],\n})\nexport class AgGridExtensionModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AgGridExtensionComponent"
                        },
                        {
                            "name": "AgGridToolbarActionComponent"
                        },
                        {
                            "name": "AgGridToolbarComponent"
                        },
                        {
                            "name": "AgGridToolbarSearchComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AgGridExtensionComponent"
                        },
                        {
                            "name": "AgGridToolbarActionComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "actions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/extension-packages/ag-grid-angular/src/lib/ag-grid-extension/ag-grid-extension.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "AgGridToolbarAction[]",
                "defaultValue": "[\n  {\n    clickFn: (params) => {\n      const { api } = params.event;\n      const data = { id: Number((Math.random() * 1000).toFixed(0)) };\n      const transaction = api.applyTransaction({ add: [data], addIndex: 0 });\n      api.flashCells({ rowNodes: transaction?.add });\n    },\n    color: 'seagreen',\n    icon: 'plus',\n    tooltip: 'Add new row',\n  },\n  {\n    clickFn: () => {\n      alert('Edit action clicked');\n    },\n    color: 'dodgerblue',\n    disabled: true,\n    icon: 'eye',\n    tooltip: 'Edit',\n    tooltipDisabled: 'Select a row to edit',\n  },\n  {\n    clickFn: (params) => {\n      const { api } = params.event;\n      const rows = api.getSelectedRows();\n      api.applyTransaction({ remove: rows });\n    },\n    color: 'crimson',\n    disabled: true,\n    icon: 'cancel',\n    tooltip: 'Delete selected row(s)',\n    tooltipDisabled: 'Select row(s) to delete',\n  },\n  {},\n  ...actionsSets.standard,\n]"
            },
            {
                "name": "actionsSets",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/extension-packages/ag-grid-angular/src/lib/ag-grid-extension/actions-sets.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  standard: [presetActions.reset, presetActions.fit, presetActions.export],\n}"
            },
            {
                "name": "ContentProjections",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/extension-packages/ag-grid-angular/src/lib/ag-grid-extension/ag-grid-extension.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...defaults,\n    actions: [{}, ...actions, {}],\n  },\n  render: (args) => ({\n    props: {\n      ...args,\n      gridOptions,\n    },\n    template: `\n    <ag-grid-extension\n      [class]=\"agTheme\"\n      [actions]=\"null\"\n      [disableSearch]=\"disableSearch\"\n      [debounceSearch]=\"debounceSearch\"\n      [enableSearch]=\"enableSearch\"\n      [placeholderSearch]=\"placeholderSearch\">\n      <div toolbarLeft>toolbarLeft</div>\n      <div toolbarCenter>toolbarCenter</div>\n      <div toolbarRight>toolbarRight &nbsp;</div>\n      <div actionsLeft>actionsLeft &nbsp;</div>\n      <div actionsRight>actionsRight &nbsp;</div>\n\n      <ag-grid-angular [gridOptions]=\"gridOptions\"></ag-grid-angular>\n    </ag-grid-extension>\n    `,\n  }),\n}"
            },
            {
                "name": "datasourceService",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/extension-packages/ag-grid-angular/src/stories/story-helpers/grid-options.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new DatasourceService()"
            },
            {
                "name": "defaults",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/extension-packages/ag-grid-angular/src/lib/ag-grid-extension/ag-grid-extension.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  actions: actionsSets.standard,\n  debounceSearch: 500,\n  disableSearch: false,\n  enableSearch: true,\n  placeholderSearch: 'Search..',\n}"
            },
            {
                "name": "gridOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/extension-packages/ag-grid-angular/src/stories/story-helpers/grid-options.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "gridOptionsService.clientSide()"
            },
            {
                "name": "gridOptionsService",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/extension-packages/ag-grid-angular/src/stories/story-helpers/grid-options.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new GridOptionsService()"
            },
            {
                "name": "items",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/extension-packages/ag-grid-angular/src/stories/story-helpers/datasource.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[]"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/extension-packages/ag-grid-angular/src/lib/ag-grid-extension/ag-grid-extension.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AgGridExtensionComponent>",
                "defaultValue": "{\n  title: 'Ag Grid Extension',\n  component: AgGridExtensionComponent,\n  decorators: [\n    componentWrapperDecorator(\n      (story) => `<div style=\"height: 500px;\">${story}</div>`,\n    ),\n    moduleMetadata({\n      imports: [AgGridModule, AgGridExtensionModule],\n    }),\n  ],\n  render: (args) => {\n    return {\n      props: {\n        ...args,\n        gridOptions: {\n          ...gridOptions,\n          ...(args as any).extraGridOptions,\n        },\n      },\n      template: `\n    <ag-grid-extension\n      [class]=\"agTheme\"\n      [actions]=\"actions\"\n      [disableSearch]=\"disableSearch\"\n      [debounceSearch]=\"debounceSearch\"\n      [enableSearch]=\"enableSearch\"\n      [placeholderSearch]=\"placeholderSearch\">\n      \n      <ag-grid-angular [gridOptions]=\"gridOptions\"></ag-grid-angular>\n    </ag-grid-extension>\n    `,\n    };\n  },\n  tags: ['autodocs'],\n}"
            },
            {
                "name": "pkg",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/extension-packages/ag-grid-angular/src/lib/constants/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'@expansion-packages/ag-grid-angular'"
            },
            {
                "name": "presetActions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/extension-packages/ag-grid-angular/src/lib/ag-grid-extension/actions-sets.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "AgGridToolbarAction",
                "defaultValue": "{\n  export: {\n    icon: 'csv',\n    tooltip: 'Export as csv',\n    clickFn: (params) => {\n      const { api } = params.event;\n      api.exportDataAsCsv();\n    },\n  },\n  fit: {\n    icon: 'arrows',\n    tooltip: 'Fit columns',\n    clickFn: (params) => {\n      const { api } = params.event;\n      api.sizeColumnsToFit();\n    },\n  },\n  reset: {\n    icon: 'columns',\n    tooltip: 'Reset columns',\n    clickFn: (params) => {\n      const { api } = params.event;\n      api.resetColumnState();\n    },\n  },\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/extension-packages/ag-grid-angular/.storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n  args: { agTheme: 'ag-theme-alpine' },\n  argTypes: {\n    agTheme: {\n      control: { type: 'radio' },\n      options: [\n        'ag-theme-alpine',\n        'ag-theme-balham',\n        'ag-theme-material',\n        'ag-theme-quartz',\n      ],\n    },\n  },\n  parameters: {\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n  },\n  tags: ['autodocs'],\n}"
            },
            {
                "name": "SeachAndActions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/extension-packages/ag-grid-angular/src/lib/ag-grid-extension/ag-grid-extension.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...defaults,\n    actions: actions,\n  },\n}"
            },
            {
                "name": "timer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/extension-packages/ag-grid-angular/src/lib/ag-grid-extension/components/ag-grid-toolbar-search/ag-grid-toolbar-search.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any"
            },
            {
                "name": "UpdateActionOnClick",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/extension-packages/ag-grid-angular/src/lib/ag-grid-extension/ag-grid-extension.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...defaults,\n    actions: [\n      {\n        icon: 'radio-button-off',\n        clickFn: (params) => {\n          const { action } = params;\n          if (action.icon === 'radio-button-off') {\n            action.icon = 'radio-button-on';\n            action.color = 'seagreen';\n          } else {\n            action.icon = 'radio-button-off';\n            action.color = '';\n          }\n          action.tooltip = `Action icon changed to ${action.icon}`;\n        },\n      },\n      {},\n      {\n        icon: 'checkbox-unchecked',\n        clickFn: (params) => {\n          const { action } = params;\n          if (action.icon === 'checkbox-unchecked') {\n            action.icon = 'checkbox-checked';\n            action.color = 'seagreen';\n          } else if (action.icon === 'checkbox-checked') {\n            action.icon = 'checkbox-indeterminate';\n            action.color = 'orange';\n          } else {\n            action.icon = 'checkbox-unchecked';\n            action.color = '';\n          }\n          action.tooltip = `Action icon changed to ${action.icon}`;\n        },\n      },\n    ],\n    extraGridOptions: {\n      onFirstDataRendered: (params) => {\n        params.api.getDisplayedRowAtIndex(0)?.setSelected(true);\n      },\n    },\n  },\n}"
            }
        ],
        "functions": [
            {
                "name": "generateRandomBrand",
                "file": "projects/extension-packages/ag-grid-angular/src/stories/story-helpers/datasource.service.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "generateRandomModel",
                "file": "projects/extension-packages/ag-grid-angular/src/stories/story-helpers/datasource.service.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "brand",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "brand",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "generateRandomPrice",
                "file": "projects/extension-packages/ag-grid-angular/src/stories/story-helpers/datasource.service.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            }
        ],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<>",
                "file": "projects/extension-packages/ag-grid-angular/src/lib/ag-grid-extension/ag-grid-extension.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "projects/extension-packages/ag-grid-angular/src/lib/ag-grid-extension/ag-grid-extension.stories.ts": [
                {
                    "name": "actions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/extension-packages/ag-grid-angular/src/lib/ag-grid-extension/ag-grid-extension.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AgGridToolbarAction[]",
                    "defaultValue": "[\n  {\n    clickFn: (params) => {\n      const { api } = params.event;\n      const data = { id: Number((Math.random() * 1000).toFixed(0)) };\n      const transaction = api.applyTransaction({ add: [data], addIndex: 0 });\n      api.flashCells({ rowNodes: transaction?.add });\n    },\n    color: 'seagreen',\n    icon: 'plus',\n    tooltip: 'Add new row',\n  },\n  {\n    clickFn: () => {\n      alert('Edit action clicked');\n    },\n    color: 'dodgerblue',\n    disabled: true,\n    icon: 'eye',\n    tooltip: 'Edit',\n    tooltipDisabled: 'Select a row to edit',\n  },\n  {\n    clickFn: (params) => {\n      const { api } = params.event;\n      const rows = api.getSelectedRows();\n      api.applyTransaction({ remove: rows });\n    },\n    color: 'crimson',\n    disabled: true,\n    icon: 'cancel',\n    tooltip: 'Delete selected row(s)',\n    tooltipDisabled: 'Select row(s) to delete',\n  },\n  {},\n  ...actionsSets.standard,\n]"
                },
                {
                    "name": "ContentProjections",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/extension-packages/ag-grid-angular/src/lib/ag-grid-extension/ag-grid-extension.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...defaults,\n    actions: [{}, ...actions, {}],\n  },\n  render: (args) => ({\n    props: {\n      ...args,\n      gridOptions,\n    },\n    template: `\n    <ag-grid-extension\n      [class]=\"agTheme\"\n      [actions]=\"null\"\n      [disableSearch]=\"disableSearch\"\n      [debounceSearch]=\"debounceSearch\"\n      [enableSearch]=\"enableSearch\"\n      [placeholderSearch]=\"placeholderSearch\">\n      <div toolbarLeft>toolbarLeft</div>\n      <div toolbarCenter>toolbarCenter</div>\n      <div toolbarRight>toolbarRight &nbsp;</div>\n      <div actionsLeft>actionsLeft &nbsp;</div>\n      <div actionsRight>actionsRight &nbsp;</div>\n\n      <ag-grid-angular [gridOptions]=\"gridOptions\"></ag-grid-angular>\n    </ag-grid-extension>\n    `,\n  }),\n}"
                },
                {
                    "name": "defaults",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/extension-packages/ag-grid-angular/src/lib/ag-grid-extension/ag-grid-extension.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  actions: actionsSets.standard,\n  debounceSearch: 500,\n  disableSearch: false,\n  enableSearch: true,\n  placeholderSearch: 'Search..',\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/extension-packages/ag-grid-angular/src/lib/ag-grid-extension/ag-grid-extension.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AgGridExtensionComponent>",
                    "defaultValue": "{\n  title: 'Ag Grid Extension',\n  component: AgGridExtensionComponent,\n  decorators: [\n    componentWrapperDecorator(\n      (story) => `<div style=\"height: 500px;\">${story}</div>`,\n    ),\n    moduleMetadata({\n      imports: [AgGridModule, AgGridExtensionModule],\n    }),\n  ],\n  render: (args) => {\n    return {\n      props: {\n        ...args,\n        gridOptions: {\n          ...gridOptions,\n          ...(args as any).extraGridOptions,\n        },\n      },\n      template: `\n    <ag-grid-extension\n      [class]=\"agTheme\"\n      [actions]=\"actions\"\n      [disableSearch]=\"disableSearch\"\n      [debounceSearch]=\"debounceSearch\"\n      [enableSearch]=\"enableSearch\"\n      [placeholderSearch]=\"placeholderSearch\">\n      \n      <ag-grid-angular [gridOptions]=\"gridOptions\"></ag-grid-angular>\n    </ag-grid-extension>\n    `,\n    };\n  },\n  tags: ['autodocs'],\n}"
                },
                {
                    "name": "SeachAndActions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/extension-packages/ag-grid-angular/src/lib/ag-grid-extension/ag-grid-extension.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...defaults,\n    actions: actions,\n  },\n}"
                },
                {
                    "name": "UpdateActionOnClick",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/extension-packages/ag-grid-angular/src/lib/ag-grid-extension/ag-grid-extension.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...defaults,\n    actions: [\n      {\n        icon: 'radio-button-off',\n        clickFn: (params) => {\n          const { action } = params;\n          if (action.icon === 'radio-button-off') {\n            action.icon = 'radio-button-on';\n            action.color = 'seagreen';\n          } else {\n            action.icon = 'radio-button-off';\n            action.color = '';\n          }\n          action.tooltip = `Action icon changed to ${action.icon}`;\n        },\n      },\n      {},\n      {\n        icon: 'checkbox-unchecked',\n        clickFn: (params) => {\n          const { action } = params;\n          if (action.icon === 'checkbox-unchecked') {\n            action.icon = 'checkbox-checked';\n            action.color = 'seagreen';\n          } else if (action.icon === 'checkbox-checked') {\n            action.icon = 'checkbox-indeterminate';\n            action.color = 'orange';\n          } else {\n            action.icon = 'checkbox-unchecked';\n            action.color = '';\n          }\n          action.tooltip = `Action icon changed to ${action.icon}`;\n        },\n      },\n    ],\n    extraGridOptions: {\n      onFirstDataRendered: (params) => {\n        params.api.getDisplayedRowAtIndex(0)?.setSelected(true);\n      },\n    },\n  },\n}"
                }
            ],
            "projects/extension-packages/ag-grid-angular/src/lib/ag-grid-extension/actions-sets.ts": [
                {
                    "name": "actionsSets",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/extension-packages/ag-grid-angular/src/lib/ag-grid-extension/actions-sets.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  standard: [presetActions.reset, presetActions.fit, presetActions.export],\n}"
                },
                {
                    "name": "presetActions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/extension-packages/ag-grid-angular/src/lib/ag-grid-extension/actions-sets.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AgGridToolbarAction",
                    "defaultValue": "{\n  export: {\n    icon: 'csv',\n    tooltip: 'Export as csv',\n    clickFn: (params) => {\n      const { api } = params.event;\n      api.exportDataAsCsv();\n    },\n  },\n  fit: {\n    icon: 'arrows',\n    tooltip: 'Fit columns',\n    clickFn: (params) => {\n      const { api } = params.event;\n      api.sizeColumnsToFit();\n    },\n  },\n  reset: {\n    icon: 'columns',\n    tooltip: 'Reset columns',\n    clickFn: (params) => {\n      const { api } = params.event;\n      api.resetColumnState();\n    },\n  },\n}"
                }
            ],
            "projects/extension-packages/ag-grid-angular/src/stories/story-helpers/grid-options.ts": [
                {
                    "name": "datasourceService",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/extension-packages/ag-grid-angular/src/stories/story-helpers/grid-options.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new DatasourceService()"
                },
                {
                    "name": "gridOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/extension-packages/ag-grid-angular/src/stories/story-helpers/grid-options.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "gridOptionsService.clientSide()"
                },
                {
                    "name": "gridOptionsService",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/extension-packages/ag-grid-angular/src/stories/story-helpers/grid-options.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new GridOptionsService()"
                }
            ],
            "projects/extension-packages/ag-grid-angular/src/stories/story-helpers/datasource.service.ts": [
                {
                    "name": "items",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/extension-packages/ag-grid-angular/src/stories/story-helpers/datasource.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[]"
                }
            ],
            "projects/extension-packages/ag-grid-angular/src/lib/constants/index.ts": [
                {
                    "name": "pkg",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/extension-packages/ag-grid-angular/src/lib/constants/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'@expansion-packages/ag-grid-angular'"
                }
            ],
            "projects/extension-packages/ag-grid-angular/.storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/extension-packages/ag-grid-angular/.storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n  args: { agTheme: 'ag-theme-alpine' },\n  argTypes: {\n    agTheme: {\n      control: { type: 'radio' },\n      options: [\n        'ag-theme-alpine',\n        'ag-theme-balham',\n        'ag-theme-material',\n        'ag-theme-quartz',\n      ],\n    },\n  },\n  parameters: {\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n  },\n  tags: ['autodocs'],\n}"
                }
            ],
            "projects/extension-packages/ag-grid-angular/src/lib/ag-grid-extension/components/ag-grid-toolbar-search/ag-grid-toolbar-search.component.ts": [
                {
                    "name": "timer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/extension-packages/ag-grid-angular/src/lib/ag-grid-extension/components/ag-grid-toolbar-search/ag-grid-toolbar-search.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any"
                }
            ]
        },
        "groupedFunctions": {
            "projects/extension-packages/ag-grid-angular/src/stories/story-helpers/datasource.service.ts": [
                {
                    "name": "generateRandomBrand",
                    "file": "projects/extension-packages/ag-grid-angular/src/stories/story-helpers/datasource.service.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                },
                {
                    "name": "generateRandomModel",
                    "file": "projects/extension-packages/ag-grid-angular/src/stories/story-helpers/datasource.service.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "brand",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "brand",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "generateRandomPrice",
                    "file": "projects/extension-packages/ag-grid-angular/src/stories/story-helpers/datasource.service.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "projects/extension-packages/ag-grid-angular/src/lib/ag-grid-extension/ag-grid-extension.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<>",
                    "file": "projects/extension-packages/ag-grid-angular/src/lib/ag-grid-extension/ag-grid-extension.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 9,
        "status": "low",
        "files": [
            {
                "filePath": "projects/extension-packages/ag-grid-angular/.storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/extension-packages/ag-grid-angular/src/lib/ag-grid-extension/actions-sets.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actionsSets",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/extension-packages/ag-grid-angular/src/lib/ag-grid-extension/actions-sets.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "presetActions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/extension-packages/ag-grid-angular/src/lib/ag-grid-extension/ag-grid-extension.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AgGridExtensionComponent",
                "coveragePercent": 66,
                "coverageCount": "6/9",
                "status": "good"
            },
            {
                "filePath": "projects/extension-packages/ag-grid-angular/src/lib/ag-grid-extension/ag-grid-extension.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/extension-packages/ag-grid-angular/src/lib/ag-grid-extension/ag-grid-extension.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ContentProjections",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/extension-packages/ag-grid-angular/src/lib/ag-grid-extension/ag-grid-extension.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaults",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/extension-packages/ag-grid-angular/src/lib/ag-grid-extension/ag-grid-extension.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/extension-packages/ag-grid-angular/src/lib/ag-grid-extension/ag-grid-extension.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SeachAndActions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/extension-packages/ag-grid-angular/src/lib/ag-grid-extension/ag-grid-extension.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "UpdateActionOnClick",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/extension-packages/ag-grid-angular/src/lib/ag-grid-extension/components/ag-grid-toolbar-action/ag-grid-toolbar-action.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AgGridToolbarActionComponent",
                "coveragePercent": 42,
                "coverageCount": "3/7",
                "status": "medium"
            },
            {
                "filePath": "projects/extension-packages/ag-grid-angular/src/lib/ag-grid-extension/components/ag-grid-toolbar-search/ag-grid-toolbar-search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AgGridToolbarSearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/extension-packages/ag-grid-angular/src/lib/ag-grid-extension/components/ag-grid-toolbar-search/ag-grid-toolbar-search.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "timer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/extension-packages/ag-grid-angular/src/lib/ag-grid-extension/components/ag-grid-toolbar/ag-grid-toolbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AgGridToolbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/extension-packages/ag-grid-angular/src/lib/ag-grid-extension/interfaces/ag-grid-context.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AgGridContext",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/extension-packages/ag-grid-angular/src/lib/ag-grid-extension/interfaces/ag-grid-toolbar-action.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AgGridToolbarAction",
                "coveragePercent": 87,
                "coverageCount": "7/8",
                "status": "very-good"
            },
            {
                "filePath": "projects/extension-packages/ag-grid-angular/src/lib/ag-grid-extension/interfaces/ag-grid-toolbar-action.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AgGridToolbarActionClickParams",
                "coveragePercent": 66,
                "coverageCount": "2/3",
                "status": "good"
            },
            {
                "filePath": "projects/extension-packages/ag-grid-angular/src/lib/constants/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "pkg",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/extension-packages/ag-grid-angular/src/stories/story-helpers/datasource.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "DatasourceService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/extension-packages/ag-grid-angular/src/stories/story-helpers/datasource.service.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "generateRandomBrand",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/extension-packages/ag-grid-angular/src/stories/story-helpers/datasource.service.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "generateRandomModel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/extension-packages/ag-grid-angular/src/stories/story-helpers/datasource.service.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "generateRandomPrice",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/extension-packages/ag-grid-angular/src/stories/story-helpers/datasource.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "items",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/extension-packages/ag-grid-angular/src/stories/story-helpers/grid-options.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "GridOptionsService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/extension-packages/ag-grid-angular/src/stories/story-helpers/grid-options.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "datasourceService",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/extension-packages/ag-grid-angular/src/stories/story-helpers/grid-options.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "gridOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/extension-packages/ag-grid-angular/src/stories/story-helpers/grid-options.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "gridOptionsService",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/extension-packages/ag-grid-angular/src/stories/story-helpers/utils.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Utils",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            }
        ]
    }
}