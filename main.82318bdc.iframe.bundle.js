(self.webpackChunkag_grid_angular=self.webpackChunkag_grid_angular||[]).push([[792],{"./projects/extension-packages/ag-grid-angular/.storybook/preview.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>_storybook_preview});var angular=__webpack_require__("./node_modules/@storybook/addon-docs/angular/index.js");const documentation_namespaceObject=JSON.parse('{"pipes":[],"interfaces":[{"name":"AgGridContext","id":"interface-AgGridContext-cbfd968db2755b2e9f423af1fc162539ccd1236600036ab0b168983dc1ef223ba69bc693840bc34ee8178af9233d3480320c2ed9f69d38038d5288a2b80e8ea0","file":"projects/extension-packages/ag-grid-angular/src/lib/ag-grid-toolbar/interfaces/ag-grid-context.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { AgGridToolbarAction } from \'./ag-grid-toolbar-action\';\\n\\nexport interface AgGridContext {\\n  actions?: AgGridToolbarAction[];\\n  quickFilterText?: string;\\n}\\n","properties":[{"name":"actions","deprecated":false,"deprecationMessage":"","type":"AgGridToolbarAction[]","optional":true,"description":"","line":4},{"name":"quickFilterText","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":5}],"indexSignatures":[],"kind":171,"methods":[],"extends":[]},{"name":"AgGridToolbarAction","id":"interface-AgGridToolbarAction-77714968aac35fa8be73c6905772149f7da72db32d0c2d4ff743dcfa71742ef8cd0fb7ad8b9ec6912f736b505c4850a293a18c1e600269605064ceb8c69fdb0e","file":"projects/extension-packages/ag-grid-angular/src/lib/ag-grid-toolbar/interfaces/ag-grid-toolbar-action.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { AgGridEvent } from \'ag-grid-community\';\\n\\nexport interface AgGridToolbarAction<TData = any, TContext = any> {\\n  /** Action color */\\n  color?: string;\\n  /** Default: `false`. */\\n  disabled?: boolean;\\n  /** If no icon is provided, the `ToolbarAction` will be treated as a separator. */\\n  icon?: string;\\n  /** A font class for the icon. Default: `ag-icon`\\n   *\\n   * Default icons: https://www.ag-grid.com/angular-data-grid/custom-icons/#provided-icons\\n   */\\n  iconFont?: string;\\n  /** ID for toolbar action, used to set html id. */\\n  id?: string;\\n  /** Tooltip text. */\\n  tooltip?: string;\\n  /** Tooltip text for disabled action */\\n  tooltipDisabled?: string;\\n  /** Arrow function to execute on click. */\\n  clickFn?: (event: AgGridToolbarActionClickParams<TData, TContext>) => void;\\n}\\n\\nexport interface AgGridToolbarActionClickParams<TData = any, TContext = any> {\\n  /** AgGrid event */\\n  event: AgGridEvent<TData, TContext>;\\n  /** Reference to the clicked action */\\n  action: AgGridToolbarAction<TData, TContext>;\\n}\\n","properties":[{"name":"clickFn","deprecated":false,"deprecationMessage":"","type":"function","optional":true,"description":"<p>Arrow function to execute on click.</p>\\n","line":22,"rawdescription":"\\nArrow function to execute on click."},{"name":"color","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>Action color</p>\\n","line":5,"rawdescription":"\\nAction color"},{"name":"disabled","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"<p>Default: <code>false</code>.</p>\\n","line":7,"rawdescription":"\\nDefault: `false`."},{"name":"icon","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>If no icon is provided, the <code>ToolbarAction</code> will be treated as a separator.</p>\\n","line":9,"rawdescription":"\\nIf no icon is provided, the `ToolbarAction` will be treated as a separator."},{"name":"iconFont","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>A font class for the icon. Default: <code>ag-icon</code></p>\\n<p>Default icons: <a href=\\"https://www.ag-grid.com/angular-data-grid/custom-icons/#provided-icons\\">https://www.ag-grid.com/angular-data-grid/custom-icons/#provided-icons</a></p>\\n","line":14,"rawdescription":"\\nA font class for the icon. Default: `ag-icon`\\n\\nDefault icons: https://www.ag-grid.com/angular-data-grid/custom-icons/#provided-icons\\n"},{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>ID for toolbar action, used to set html id.</p>\\n","line":16,"rawdescription":"\\nID for toolbar action, used to set html id."},{"name":"tooltip","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>Tooltip text.</p>\\n","line":18,"rawdescription":"\\nTooltip text."},{"name":"tooltipDisabled","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>Tooltip text for disabled action</p>\\n","line":20,"rawdescription":"\\nTooltip text for disabled action"}],"indexSignatures":[],"kind":171,"methods":[],"extends":[]},{"name":"AgGridToolbarActionClickParams","id":"interface-AgGridToolbarActionClickParams-77714968aac35fa8be73c6905772149f7da72db32d0c2d4ff743dcfa71742ef8cd0fb7ad8b9ec6912f736b505c4850a293a18c1e600269605064ceb8c69fdb0e","file":"projects/extension-packages/ag-grid-angular/src/lib/ag-grid-toolbar/interfaces/ag-grid-toolbar-action.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { AgGridEvent } from \'ag-grid-community\';\\n\\nexport interface AgGridToolbarAction<TData = any, TContext = any> {\\n  /** Action color */\\n  color?: string;\\n  /** Default: `false`. */\\n  disabled?: boolean;\\n  /** If no icon is provided, the `ToolbarAction` will be treated as a separator. */\\n  icon?: string;\\n  /** A font class for the icon. Default: `ag-icon`\\n   *\\n   * Default icons: https://www.ag-grid.com/angular-data-grid/custom-icons/#provided-icons\\n   */\\n  iconFont?: string;\\n  /** ID for toolbar action, used to set html id. */\\n  id?: string;\\n  /** Tooltip text. */\\n  tooltip?: string;\\n  /** Tooltip text for disabled action */\\n  tooltipDisabled?: string;\\n  /** Arrow function to execute on click. */\\n  clickFn?: (event: AgGridToolbarActionClickParams<TData, TContext>) => void;\\n}\\n\\nexport interface AgGridToolbarActionClickParams<TData = any, TContext = any> {\\n  /** AgGrid event */\\n  event: AgGridEvent<TData, TContext>;\\n  /** Reference to the clicked action */\\n  action: AgGridToolbarAction<TData, TContext>;\\n}\\n","properties":[{"name":"action","deprecated":false,"deprecationMessage":"","type":"AgGridToolbarAction<TData | TContext>","optional":false,"description":"<p>Reference to the clicked action</p>\\n","line":29,"rawdescription":"\\nReference to the clicked action"},{"name":"event","deprecated":false,"deprecationMessage":"","type":"AgGridEvent<TData | TContext>","optional":false,"description":"<p>AgGrid event</p>\\n","line":27,"rawdescription":"\\nAgGrid event"}],"indexSignatures":[],"kind":171,"methods":[],"extends":[]}],"injectables":[{"name":"DatasourceService","id":"injectable-DatasourceService-20768f8c74c72672a0bdba2ff9d08abd0f529bcda236a422ab609fe4a1773d4660e3cebfde87b3220fe8c2312c67e9f0d21f62a50e506bf77fa53e1f40270bcc","file":"projects/extension-packages/ag-grid-angular/src/stories/story-helpers/datasource.service.ts","properties":[],"methods":[{"name":"createFakeServer","args":[{"name":"dataCount","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"{ getData: (request: IServerSideGetRowsRequest) => { success: boolean; rows: any; }; }","typeParameters":[],"line":45,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"dataCount","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"createServerSideDatasource","args":[{"name":"dataCount","type":"number","deprecated":false,"deprecationMessage":"","defaultValue":"100"}],"optional":false,"returnType":"IServerSideDatasource","typeParameters":[],"line":10,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"dataCount","type":"number","deprecated":false,"deprecationMessage":"","defaultValue":"100","tagName":{"text":"param"}}]},{"name":"generateItems","args":[{"name":"dataCount","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any[]","typeParameters":[],"line":30,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"dataCount","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport {\\n  IServerSideDatasource,\\n  IServerSideGetRowsRequest,\\n} from \'ag-grid-community\';\\n@Injectable({ providedIn: \'root\' })\\nexport class DatasourceService {\\n  constructor() {}\\n\\n  createServerSideDatasource(dataCount = 100): IServerSideDatasource {\\n    const server = this.createFakeServer(dataCount);\\n    return {\\n      getRows: (params) => {\\n        console.log(\'[Datasource] - rows requested by grid: \', params.request);\\n        // get data for request from our fake server\\n        const response = server.getData(params.request);\\n        // simulating real server call with a 500ms delay\\n        setTimeout(function () {\\n          if (response.success) {\\n            // supply rows for requested block to grid\\n            params.success({ rowData: response.rows });\\n          } else {\\n            params.fail();\\n          }\\n        }, 500);\\n      },\\n    };\\n  }\\n\\n  generateItems(dataCount: number): any[] {\\n    const items: any[] = [];\\n    for (let i = 0; i <= dataCount; i++) {\\n      const brand = generateRandomBrand();\\n      items.push({\\n        id: i,\\n        brand: brand,\\n        isNew: Math.random() > 0.5,\\n        model: generateRandomModel(brand),\\n        price: generateRandomPrice(),\\n      });\\n    }\\n    return items;\\n  }\\n\\n  private createFakeServer(dataCount: number) {\\n    const items = this.generateItems(dataCount);\\n    return {\\n      getData: (request: IServerSideGetRowsRequest) => {\\n        // in this simplified fake server all rows are contained in an array\\n        const requestedRows = items.slice(request.startRow, request.endRow);\\n        return {\\n          success: true,\\n          rows: requestedRows,\\n        };\\n      },\\n    };\\n  }\\n}\\n// Generate 97 more items with random data\\nconst items = [];\\nfor (let i = 0; i <= 100; i++) {\\n  const brand = generateRandomBrand();\\n  items.push({\\n    id: i,\\n    brand: brand,\\n    isNew: Math.random() > 0.5,\\n    model: generateRandomModel(brand),\\n    price: generateRandomPrice(),\\n  });\\n}\\n\\n// Function to generate random make\\nfunction generateRandomBrand() {\\n  const brand = [\'BMW\', \'Honda\', \'Tesla\', \'Volkswagen\'];\\n  return brand[Math.floor(Math.random() * brand.length)];\\n}\\n\\n// Function to generate random model\\nfunction generateRandomModel(brand: string) {\\n  const allModels: any = {\\n    BMW: [\'X1\', \'X2\', \'X3\', \'X4\', \'X5\', \'X6\', \'X7\'],\\n    Honda: [\'Accord\', \'Civic\'],\\n    Tesla: [\'Model S\', \'Model 3\', \'Model X\', \'Model Y\', \'Cybertruck\'],\\n    Volkswagen: [\'e-Up\', \'Golf\', \'Polo\'],\\n  };\\n  const models = allModels[brand];\\n  return models[Math.floor(Math.random() * models.length)];\\n}\\n\\n// Function to generate random price\\nfunction generateRandomPrice() {\\n  const price = Math.floor(Math.random() * 50000) + 20000;\\n  return Math.round(price / 100) * 100;\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":7},"extends":[],"type":"injectable"},{"name":"GridOptionsService","id":"injectable-GridOptionsService-c1c5a61da578557b327cefc4bb0413d8bc12305210d8bb3da8f249539dd140114c5e34dccbed2c23dc509b2f055be47be459a7231f7442b48bbd39e9fa6cec68","file":"projects/extension-packages/ag-grid-angular/src/stories/story-helpers/grid-options.service.ts","properties":[{"name":"clientSide","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":32},{"name":"core","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":18},{"name":"getColDefs","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":10},{"name":"getDefaultColDef","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":6},{"name":"serverSide","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":39}],"methods":[],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { ColDef, GridOptions } from \'ag-grid-community\';\\n\\n@Injectable({ providedIn: \'root\' })\\nexport class GridOptionsService {\\n  getDefaultColDef = (): ColDef => {\\n    return { editable: true, enableCellChangeFlash: true, sortable: true };\\n  };\\n\\n  getColDefs = (): ColDef[] => [\\n    { field: \'id\', width: 55 },\\n    { field: \'brand\' },\\n    { field: \'model\' },\\n    { field: \'price\', width: 90 },\\n    { field: \'isNew\', width: 80 },\\n  ];\\n\\n  core = (): GridOptions => {\\n    return {\\n      context: {},\\n      defaultColDef: this.getDefaultColDef(),\\n      getRowId: (params) => {\\n        return String(params.data[\'id\']);\\n      },\\n      rowSelection: {\\n        mode: \'singleRow\',\\n      },\\n      undoRedoCellEditing: true,\\n    };\\n  };\\n\\n  clientSide = (): GridOptions => {\\n    return {\\n      ...this.core(),\\n      rowModelType: \'clientSide\',\\n    };\\n  };\\n\\n  serverSide = (): GridOptions => {\\n    return {\\n      ...this.core(),\\n      rowModelType: \'serverSide\',\\n    };\\n  };\\n}\\n","extends":[],"type":"injectable"}],"guards":[],"interceptors":[],"classes":[{"name":"Utils","id":"class-Utils-6bf4b3d20543a12a4db0e76530bd9cf294a0d7f080e54c6ead7e6eca74eb7eb15e251019ce0c6a8e0c989b97ac2f9314884f4e7e04185382c4a172133e21d7dd","file":"projects/extension-packages/ag-grid-angular/src/stories/story-helpers/utils.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"export default class Utils {\\n  static getRandomColor() {\\n    const colorNames = [\'Red\', \'Green\', \'Blue\', \'Yellow\', \'Orange\'];\\n    const randomIndex = Math.floor(Math.random() * colorNames.length);\\n    return colorNames[randomIndex];\\n  }\\n}\\n","inputsClass":[],"outputsClass":[],"properties":[],"methods":[{"name":"getRandomColor","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":2,"deprecated":false,"deprecationMessage":"","modifierKind":[126]}],"indexSignatures":[],"extends":[],"hostBindings":[],"hostListeners":[]},{"name":"Utils","id":"class-Utils-cabdb76fb2dbc8ae4a7e0550a7ac2684c8aa5ea986d4eb4543dc18730de89357329f7bf67b24937b7b1a0d210b8784275812d503928c030f96f78483b26d6308-1","file":"projects/extension-packages/ag-grid-angular/src/lib/ag-grid-toolbar/utils/utils.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"export class Utils {\\n  public static async copyJsonToClipboard(data: any): Promise<void> {\\n    const jsonString = JSON.stringify(data, null, 2);\\n    try {\\n      await navigator.clipboard.writeText(jsonString);\\n    } catch (err) {\\n      throw err; // Let the caller handle the error\\n    }\\n  }\\n}\\n","inputsClass":[],"outputsClass":[],"properties":[],"methods":[{"name":"copyJsonToClipboard","args":[{"name":"data","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Promise<void>","typeParameters":[],"line":2,"deprecated":false,"deprecationMessage":"","modifierKind":[126,134],"jsdoctags":[{"name":"data","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"indexSignatures":[],"extends":[],"hostBindings":[],"hostListeners":[],"isDuplicate":true,"duplicateId":1,"duplicateName":"Utils-1"}],"directives":[],"components":[{"name":"AgGridToolbarActionComponent","id":"component-AgGridToolbarActionComponent-8a7398db9b285b12fc5bdec93ffd67d2d7a054cfc75cbfbdf452d2c4b843cb84b4449be4cdee86a599355f6f9796209d841a47a11551fd6dc13157f4770111c4","file":"projects/extension-packages/ag-grid-angular/src/lib/ag-grid-toolbar/components/ag-grid-toolbar-action/ag-grid-toolbar-action.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ag-grid-toolbar-action","styleUrls":["./ag-grid-toolbar-action.component.css"],"styles":[],"template":"<span\\n  class=\\"toolbar-action\\"\\n  [class.disabled]=\\"disabled()\\"\\n  [id]=\\"id()\\"\\n  [class]=\\"iconFont()\\"\\n  [style.color]=\\"disabled() ? \'\' : color()\\"\\n  [title]=\\"tooltip()\\"\\n>\\n  {{ icon() }}<ng-content></ng-content>\\n</span>\\n","templateUrl":[],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"color","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":21,"modifierKind":[148],"required":false},{"name":"disabled","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":22,"modifierKind":[148],"required":false},{"name":"icon","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"<p>Icon name. Example <code>home</code></p>\\n<h3>Requirements</h3>\\n<p>Needs to have a font class included in your html and css.</p>\\n<p><strong>With Google icons:</strong></p>\\n<b>Example :</b><div><pre class=\\"line-numbers\\"><code class=\\"language-html\\">&lt;!-- Add this to your html: --&gt;\\n&lt;html&gt;\\n  &lt;head&gt;\\n    &lt;link href=&quot;https://fonts.googleapis.com/icon?family=Material+Icons&quot; rel=&quot;stylesheet&quot; /&gt;\\n  &lt;/head&gt;\\n&lt;html&gt;\\n\\nAnd set `iconFont: &#39;material-icons&#39;`</code></pre></div>","line":51,"rawdescription":"\\nIcon name. Example `home`\\n\\n\\n### Requirements\\n\\nNeeds to have a font class included in your html and css.\\n\\n**With Google icons:**\\n```html\\n\x3c!-- Add this to your html: --\x3e\\n<html>\\n  <head>\\n    <link href=\\"https://fonts.googleapis.com/icon?family=Material+Icons\\" rel=\\"stylesheet\\" />\\n  </head>\\n<html>\\n\\nAnd set `iconFont: \'material-icons\'`\\n```\\n","modifierKind":[148],"required":false},{"name":"id","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"<p>ID for toolbar action, used to set html id</p>\\n","line":31,"rawdescription":"\\nID for toolbar action, used to set html id","modifierKind":[148],"required":false},{"name":"tooltip","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":52,"modifierKind":[148],"required":false}],"outputsClass":[],"propertiesClass":[{"name":"color","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":21,"modifierKind":[148],"required":false},{"name":"disabled","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":22,"modifierKind":[148],"required":false},{"name":"icon","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"<p>Icon name. Example <code>home</code></p>\\n<h3>Requirements</h3>\\n<p>Needs to have a font class included in your html and css.</p>\\n<p><strong>With Google icons:</strong></p>\\n<b>Example :</b><div><pre class=\\"line-numbers\\"><code class=\\"language-html\\">&lt;!-- Add this to your html: --&gt;\\n&lt;html&gt;\\n  &lt;head&gt;\\n    &lt;link href=&quot;https://fonts.googleapis.com/icon?family=Material+Icons&quot; rel=&quot;stylesheet&quot; /&gt;\\n  &lt;/head&gt;\\n&lt;html&gt;\\n\\nAnd set `iconFont: &#39;material-icons&#39;`</code></pre></div>","line":51,"rawdescription":"\\nIcon name. Example `home`\\n\\n\\n### Requirements\\n\\nNeeds to have a font class included in your html and css.\\n\\n**With Google icons:**\\n```html\\n\x3c!-- Add this to your html: --\x3e\\n<html>\\n  <head>\\n    <link href=\\"https://fonts.googleapis.com/icon?family=Material+Icons\\" rel=\\"stylesheet\\" />\\n  </head>\\n<html>\\n\\nAnd set `iconFont: \'material-icons\'`\\n```\\n","modifierKind":[148],"required":false},{"name":"iconFont","defaultValue":"input(\'material-icons\')","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"<p>A font class for the icon. Default: <code>material-icons</code>.</p>\\n<p>The font needs to be included in your html and css.</p>\\n<p><strong>Example font setup:</strong></p>\\n<ul>\\n<li><a href=\\"https://developers.google.com/fonts/docs/material_icons#icon_font_for_the_web\\">https://developers.google.com/fonts/docs/material_icons#icon_font_for_the_web</a></li>\\n</ul>\\n","line":29,"rawdescription":"\\nA font class for the icon. Default: `material-icons`.\\n\\nThe font needs to be included in your html and css.\\n\\n**Example font setup:**\\n- https://developers.google.com/fonts/docs/material_icons#icon_font_for_the_web","modifierKind":[148]},{"name":"id","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"<p>ID for toolbar action, used to set html id</p>\\n","line":31,"rawdescription":"\\nID for toolbar action, used to set html id","modifierKind":[148],"required":false},{"name":"tooltip","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":52,"modifierKind":[148],"required":false}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, input } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'ag-grid-toolbar-action\',\\n  standalone: true,\\n  styleUrls: [\'./ag-grid-toolbar-action.component.css\'],\\n  template: `\\n    <span\\n      class=\\"toolbar-action\\"\\n      [class.disabled]=\\"disabled()\\"\\n      [id]=\\"id()\\"\\n      [class]=\\"iconFont()\\"\\n      [style.color]=\\"disabled() ? \'\' : color()\\"\\n      [title]=\\"tooltip()\\"\\n    >\\n      {{ icon() }}<ng-content></ng-content>\\n    </span>\\n  `,\\n})\\nexport class AgGridToolbarActionComponent {\\n  readonly color = input<string>();\\n  readonly disabled = input<boolean>();\\n  /** A font class for the icon. Default: `material-icons`.\\n   *\\n   * The font needs to be included in your html and css.\\n   *\\n   * **Example font setup:**\\n   * - https://developers.google.com/fonts/docs/material_icons#icon_font_for_the_web */\\n  readonly iconFont = input(\'material-icons\');\\n  /** ID for toolbar action, used to set html id */\\n  readonly id = input<string>();\\n  /** Icon name. Example `home`\\n   *\\n   *\\n   * ### Requirements\\n   *\\n   * Needs to have a font class included in your html and css.\\n   *\\n   * **With Google icons:**\\n   * ```html\\n   * \x3c!-- Add this to your html: --\x3e\\n   * <html>\\n   *   <head>\\n   *     <link href=\\"https://fonts.googleapis.com/icon?family=Material+Icons\\" rel=\\"stylesheet\\" />\\n   *   </head>\\n   * <html>\\n   *\\n   * And set `iconFont: \'material-icons\'`\\n   * ```\\n   */\\n  readonly icon = input<string>();\\n  readonly tooltip = input<string>();\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host {\\n  /* Prevent click event on \\"host\\" when .disabled */\\n  display: contents;\\n  --ag-toolbar-action-color: #444;\\n  --ag-toolbar-action-disabled-color: #aaa;\\n  --ag-toolbar-action-hover-color: #eee;\\n  --ag-toolbar-action-active-color: #ddd;\\n}\\n\\n.toolbar-action {\\n  color: var(--ag-toolbar-action-color);\\n  font-size: 24px;\\n  height: unset;\\n  width: unset;\\n  padding: 8px;\\n  user-select: none;\\n}\\n\\n.toolbar-action.disabled {\\n  pointer-events: none;\\n  color: var(--ag-toolbar-action-disabled-color);\\n}\\n\\n.toolbar-action:hover {\\n  cursor: pointer;\\n  border-radius: 3px;\\n  background: var(--ag-toolbar-action-hover-color);\\n}\\n\\n.toolbar-action:active {\\n  background: var(--ag-toolbar-action-active-color);\\n}\\n","styleUrl":"./ag-grid-toolbar-action.component.css"}],"stylesData":"","extends":[]},{"name":"AgGridToolbarComponent","id":"component-AgGridToolbarComponent-49531b9727e4884bdc2f00fc22d4b4396c647d73addd0a7bfed28bf01c1f809e64e363174c7d318585f97c03dc4db4f9a5913103371c0fb9a3974a20c13a0a74","file":"projects/extension-packages/ag-grid-angular/src/lib/ag-grid-toolbar/components/ag-grid-toolbar/ag-grid-toolbar.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ag-grid-toolbar","styleUrls":["./ag-grid-toolbar.component.css"],"styles":[],"template":"<div class=\\"ag-grid-toolbar\\">\\n  <div class=\\"ag-grid-toolbar-content\\">\\n    <div class=\\"ag-grid-toolbar-content-left\\">\\n      @if (enableSearch()) {\\n        <ag-grid-toolbar-search\\n          [agGrid]=\\"agGrid()\\"\\n          [debounceTime]=\\"debounceSearch()\\"\\n          [disabled]=\\"disableSearch()\\"\\n          [placeholder]=\\"placeholderSearch()\\"\\n        ></ag-grid-toolbar-search>\\n      }\\n      <ng-content select=\\"[toolbarLeft]\\"></ng-content>\\n    </div>\\n    <div class=\\"ag-grid-toolbar-content-center\\">\\n      <ng-content select=\\"[toolbarCenter]\\"></ng-content>\\n    </div>\\n    <div class=\\"ag-grid-toolbar-content-right\\">\\n      <ng-content select=\\"[toolbarRight]\\"></ng-content>\\n      <ng-content select=\\"[actionsLeft]\\"></ng-content>\\n      @for (action of actions(); track $index) {\\n        @if (!action?.icon) {\\n          <span class=\\"toolbar-action-separator\\"></span>\\n        }\\n        @if (action?.icon) {\\n          \x3c!-- <div [title]=\\"action.disabled ? action.tooltipDisabled || \'\' : \'\'\\"> --\x3e\\n          <ag-grid-toolbar-action\\n            [color]=\\"action?.color\\"\\n            [disabled]=\\"action?.disabled || false\\"\\n            [icon]=\\"action.icon\\"\\n            [id]=\\"action.id\\"\\n            [tooltip]=\\"action.tooltip || \'\'\\"\\n            (click)=\\"action?.clickFn?.({ action, event })\\"\\n          ></ag-grid-toolbar-action>\\n          \x3c!-- </div> --\x3e\\n        }\\n      }\\n      <ng-content select=\\"[actionsRight]\\"></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\"ag-grid-content\\">\\n  <ng-content>\\n    \x3c!-- ag-grid-angular --\x3e\\n  </ng-content>\\n</div>\\n","templateUrl":[],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"debounceSearch","defaultValue":"500","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"<p>Debounce in ms for search input</p>\\n","line":164,"rawdescription":"\\nDebounce in ms for search input","modifierKind":[148],"required":false},{"name":"disableSearch","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"<p>Disable search field</p>\\n","line":166,"rawdescription":"\\nDisable search field","modifierKind":[148],"required":false},{"name":"enableSearch","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"<p>Enable search field</p>\\n","line":168,"rawdescription":"\\nEnable search field","modifierKind":[148],"required":false}],"outputsClass":[],"propertiesClass":[{"name":"actions","defaultValue":"input<AgGridToolbarAction[]>([\\n    agGridToolbarAction.fit,\\n    agGridToolbarAction.reset,\\n    agGridToolbarAction.csv,\\n  ])","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"<p>Toolbar actions</p>\\n","line":158,"rawdescription":"\\nToolbar actions","modifierKind":[148]},{"name":"agGrid","defaultValue":"contentChild.required(AgGridAngular)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"<p>Ag-grid component ref</p>\\n","line":178,"rawdescription":"\\nAg-grid component ref","modifierKind":[148]},{"name":"debounceSearch","defaultValue":"500","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"<p>Debounce in ms for search input</p>\\n","line":164,"rawdescription":"\\nDebounce in ms for search input","modifierKind":[148],"required":false},{"name":"disableSearch","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"<p>Disable search field</p>\\n","line":166,"rawdescription":"\\nDisable search field","modifierKind":[148],"required":false},{"name":"elRef","defaultValue":"inject(ElementRef)","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":180,"modifierKind":[123,148]},{"name":"enableSearch","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"<p>Enable search field</p>\\n","line":168,"rawdescription":"\\nEnable search field","modifierKind":[148],"required":false},{"name":"gridIsReady","defaultValue":"signal(false)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":175,"modifierKind":[148]},{"name":"gridReady","defaultValue":"output<AgGridEvent<TData, TContext>>()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"<p>Grid ready event</p>\\n","line":173,"rawdescription":"\\nGrid ready event","modifierKind":[148]},{"name":"placeholderSearch","defaultValue":"input(\'Search...\')","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"<p>Search placeholder text</p>\\n","line":170,"rawdescription":"\\nSearch placeholder text","modifierKind":[148]}],"methodsClass":[{"name":"getAgStyles","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":212,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngAfterContentInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":194,"deprecated":false,"deprecationMessage":""},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":208,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"AgGridToolbarSearchComponent","type":"component"},{"name":"AgGridToolbarActionComponent","type":"component"}],"description":"<p>Adds toolbar to ag-grid, with search and actions.</p>\\n<h3>Prerequisites</h3>\\n<ul>\\n<li><a href=\\"https://www.ag-grid.com/angular-data-grid/getting-started/\\">Ag Grid Angular</a></li>\\n<li>Add icon-font(s) of your choice. Must be included in your html and css.<ul>\\n<li>Default: <code>material-icons</code></li>\\n</ul>\\n</li>\\n</ul>\\n<b>Example :</b><div><pre class=\\"line-numbers\\"><code class=\\"language-html\\">&lt;!-- Google icon-font: https://developers.google.com/fonts/docs/material_icons --&gt;\\n&lt;link href=&quot;https://fonts.googleapis.com/icon?family=Material+Icons&quot; rel=&quot;stylesheet&quot; /&gt;</code></pre></div><h2>Features:</h2>\\n<ul>\\n<li>Quick search</li>\\n<li>Toolbar actions<ul>\\n<li>Clickable icons</li>\\n<li>Add icon-font of your choice.<ul>\\n<li>Default: <code>material-icons</code></li>\\n<li>Setup: <a href=\\"https://developers.google.com/fonts/docs/material_icons#setup_method_1_using_via_google_fonts\\">https://developers.google.com/fonts/docs/material_icons#setup_method_1_using_via_google_fonts</a></li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li>Toolbar content projection with ng-content<ul>\\n<li>Content placeholders (selectors)<ul>\\n<li><code>toolbarLeft</code> =&gt; Toolbar left</li>\\n<li><code>toolbarCenter</code> =&gt; Toolbar center</li>\\n<li><code>toolbarRight</code> =&gt; Toolbar right</li>\\n<li><code>actionsLeft</code> =&gt; pre actions</li>\\n<li><code>actionsRight</code> =&gt; post actions</li>\\n</ul>\\n</li>\\n<li>Single-slot</li>\\n</ul>\\n</li>\\n<li>Adapts to ag-grid themes</li>\\n</ul>\\n<h2>Component overview</h2>\\n<p><strong>Class:</strong> <code>AgGridToolbarComponent</code>, <code>AgGridToolbarActionComponent</code></p>\\n<p><strong>Constants:</strong></p>\\n<ul>\\n<li><code>agGridToolbarActions: AgGridToolbarAction</code> =&gt; Predefined single actions. Fit columns, reset columns, cvs export etc</li>\\n</ul>\\n<p><strong>Interfaces:</strong></p>\\n<ul>\\n<li><code>AgGridContext</code> =&gt; Properties this component adds to <code>gridOptions.context</code></li>\\n<li><code>AgGridToolbarAction</code> =&gt; Properties for a toolbar action</li>\\n</ul>\\n<p><strong>Selector:</strong> <code>ag-grid-toolbar</code></p>\\n<h3>Toolbar search</h3>\\n<h4>Client side</h4>\\n<p>Works out of the box for client side grids.</p>\\n<h4>Other row models</h4>\\n<p>Use <code>context.quickFilterText</code> in custom datasource implementation <code>IServerSideDatasource</code> like below.</p>\\n<b>Example :</b><div><pre class=\\"line-numbers\\"><code class=\\"language-ts\\">  // server-side example\\n  export class ExampleDatasource implements IServerSideDatasource {\\n      getRows(params: IServerSideGetRowsParams): void {\\n        const { quickFilterText } = params.context as AgGridToolbarContext;\\n        // Then use `quickFilterText` in backend call etc..\\n      }\\n  }</code></pre></div><h3>Code example</h3>\\n<b>Example :</b><div><pre class=\\"line-numbers\\"><code class=\\"language-ts\\">&#64;Component({\\n  standalone: true,\\n  selector: &#39;app-demo-grid&#39;,\\n  imports: [AgGridModule, AgGridToolbarComponent],\\n  template: `\\n    &lt;ag-grid-toolbar [actions]=&quot;actions&quot;&gt;\\n      &lt;ag-grid-angular [gridOptions]=&quot;gridOptions&quot;&gt;&lt;/ag-grid-angular&gt;\\n    &lt;/ag-grid-toolbar&gt;\\n  `,\\n})\\nexport class DemoGridComponent {\\n  actions: AgGridToolbarAction[];\\n  gridOptions: GridOptions;\\n}</code></pre></div>","rawdescription":"\\n\\nAdds toolbar to ag-grid, with search and actions.\\n\\n### Prerequisites\\n\\n- [Ag Grid Angular](https://www.ag-grid.com/angular-data-grid/getting-started/)\\n- Add icon-font(s) of your choice. Must be included in your html and css.\\n  - Default: `material-icons`\\n\\n```html\\n\x3c!-- Google icon-font: https://developers.google.com/fonts/docs/material_icons --\x3e\\n<link href=\\"https://fonts.googleapis.com/icon?family=Material+Icons\\" rel=\\"stylesheet\\" />\\n```\\n\\n## Features:\\n- Quick search\\n- Toolbar actions\\n  - Clickable icons\\n  - Add icon-font of your choice.\\n    - Default: `material-icons`\\n    - Setup: https://developers.google.com/fonts/docs/material_icons#setup_method_1_using_via_google_fonts\\n- Toolbar content projection with ng-content\\n  - Content placeholders (selectors)\\n    - `toolbarLeft` => Toolbar left\\n    - `toolbarCenter` => Toolbar center\\n    - `toolbarRight` => Toolbar right\\n    - `actionsLeft` => pre actions\\n    - `actionsRight` => post actions\\n  - Single-slot\\n- Adapts to ag-grid themes\\n\\n## Component overview\\n\\n**Class:** `AgGridToolbarComponent`, `AgGridToolbarActionComponent`\\n\\n**Constants:**\\n- `agGridToolbarActions: AgGridToolbarAction` => Predefined single actions. Fit columns, reset columns, cvs export etc\\n\\n**Interfaces:**\\n- `AgGridContext` => Properties this component adds to `gridOptions.context`\\n- `AgGridToolbarAction` => Properties for a toolbar action\\n\\n**Selector:** `ag-grid-toolbar`\\n\\n### Toolbar search\\n\\n#### Client side\\n\\nWorks out of the box for client side grids.\\n\\n#### Other row models\\n\\nUse `context.quickFilterText` in custom datasource implementation `IServerSideDatasource` like below.\\n\\n```ts\\n  // server-side example\\n  export class ExampleDatasource implements IServerSideDatasource {\\n      getRows(params: IServerSideGetRowsParams): void {\\n        const { quickFilterText } = params.context as AgGridToolbarContext;\\n        // Then use `quickFilterText` in backend call etc..\\n      }\\n  }\\n```\\n\\n### Code example\\n\\n```ts\\n@Component({\\n  standalone: true,\\n  selector: \'app-demo-grid\',\\n  imports: [AgGridModule, AgGridToolbarComponent],\\n  template: `\\n    <ag-grid-toolbar [actions]=\\"actions\\">\\n      <ag-grid-angular [gridOptions]=\\"gridOptions\\"></ag-grid-angular>\\n    </ag-grid-toolbar>\\n  `,\\n})\\nexport class DemoGridComponent {\\n  actions: AgGridToolbarAction[];\\n  gridOptions: GridOptions;\\n}\\n```\\n","type":"component","sourceCode":"import {\\n  Component,\\n  contentChild,\\n  ElementRef,\\n  inject,\\n  input,\\n  output,\\n  signal,\\n} from \'@angular/core\';\\nimport { AgGridAngular } from \'ag-grid-angular\';\\nimport { AgGridEvent } from \'ag-grid-community\';\\nimport { firstValueFrom } from \'rxjs\';\\nimport { agGridToolbarAction } from \'../../constants/ag-grid-toolbar-actions\';\\nimport { AgGridContext } from \'../../interfaces/ag-grid-context\';\\nimport { AgGridToolbarAction } from \'../../interfaces/ag-grid-toolbar-action\';\\nimport { AgGridToolbarActionComponent } from \'../ag-grid-toolbar-action/ag-grid-toolbar-action.component\';\\nimport { AgGridToolbarSearchComponent } from \'../ag-grid-toolbar-search/ag-grid-toolbar-search.component\';\\n\\n/**\\n * Adds toolbar to ag-grid, with search and actions.\\n *\\n * ### Prerequisites\\n *\\n * - [Ag Grid Angular](https://www.ag-grid.com/angular-data-grid/getting-started/)\\n * - Add icon-font(s) of your choice. Must be included in your html and css.\\n *   - Default: `material-icons`\\n *\\n * ```html\\n * \x3c!-- Google icon-font: https://developers.google.com/fonts/docs/material_icons --\x3e\\n * <link href=\\"https://fonts.googleapis.com/icon?family=Material+Icons\\" rel=\\"stylesheet\\" />\\n * ```\\n *\\n * ## Features:\\n * - Quick search\\n * - Toolbar actions\\n *   - Clickable icons\\n *   - Add icon-font of your choice.\\n *     - Default: `material-icons`\\n *     - Setup: https://developers.google.com/fonts/docs/material_icons#setup_method_1_using_via_google_fonts\\n * - Toolbar content projection with ng-content\\n *   - Content placeholders (selectors)\\n *     - `toolbarLeft` => Toolbar left\\n *     - `toolbarCenter` => Toolbar center\\n *     - `toolbarRight` => Toolbar right\\n *     - `actionsLeft` => pre actions\\n *     - `actionsRight` => post actions\\n *   - Single-slot\\n * - Adapts to ag-grid themes\\n *\\n * ## Component overview\\n *\\n * **Class:** `AgGridToolbarComponent`, `AgGridToolbarActionComponent`\\n *\\n * **Constants:**\\n * - `agGridToolbarActions: AgGridToolbarAction` => Predefined single actions. Fit columns, reset columns, cvs export etc\\n *\\n * **Interfaces:**\\n * - `AgGridContext` => Properties this component adds to `gridOptions.context`\\n * - `AgGridToolbarAction` => Properties for a toolbar action\\n *\\n * **Selector:** `ag-grid-toolbar`\\n *\\n * ### Toolbar search\\n *\\n * #### Client side\\n *\\n * Works out of the box for client side grids.\\n *\\n * #### Other row models\\n *\\n * Use `context.quickFilterText` in custom datasource implementation `IServerSideDatasource` like below.\\n *\\n * ```ts\\n *   // server-side example\\n *   export class ExampleDatasource implements IServerSideDatasource {\\n *       getRows(params: IServerSideGetRowsParams): void {\\n *         const { quickFilterText } = params.context as AgGridToolbarContext;\\n *         // Then use `quickFilterText` in backend call etc..\\n *       }\\n *   }\\n * ```\\n *\\n * ### Code example\\n *\\n * ```ts\\n * @Component({\\n *   standalone: true,\\n *   selector: \'app-demo-grid\',\\n *   imports: [AgGridModule, AgGridToolbarComponent],\\n *   template: `\\n *     <ag-grid-toolbar [actions]=\\"actions\\">\\n *       <ag-grid-angular [gridOptions]=\\"gridOptions\\"></ag-grid-angular>\\n *     </ag-grid-toolbar>\\n *   `,\\n * })\\n * export class DemoGridComponent {\\n *   actions: AgGridToolbarAction[];\\n *   gridOptions: GridOptions;\\n * }\\n * ```\\n */\\n@Component({\\n  imports: [AgGridToolbarSearchComponent, AgGridToolbarActionComponent],\\n  selector: \'ag-grid-toolbar\',\\n  standalone: true,\\n  styleUrls: [\'./ag-grid-toolbar.component.css\'],\\n  template: `\\n    <div class=\\"ag-grid-toolbar\\">\\n      <div class=\\"ag-grid-toolbar-content\\">\\n        <div class=\\"ag-grid-toolbar-content-left\\">\\n          @if (enableSearch()) {\\n            <ag-grid-toolbar-search\\n              [agGrid]=\\"agGrid()\\"\\n              [debounceTime]=\\"debounceSearch()\\"\\n              [disabled]=\\"disableSearch()\\"\\n              [placeholder]=\\"placeholderSearch()\\"\\n            ></ag-grid-toolbar-search>\\n          }\\n          <ng-content select=\\"[toolbarLeft]\\"></ng-content>\\n        </div>\\n        <div class=\\"ag-grid-toolbar-content-center\\">\\n          <ng-content select=\\"[toolbarCenter]\\"></ng-content>\\n        </div>\\n        <div class=\\"ag-grid-toolbar-content-right\\">\\n          <ng-content select=\\"[toolbarRight]\\"></ng-content>\\n          <ng-content select=\\"[actionsLeft]\\"></ng-content>\\n          @for (action of actions(); track $index) {\\n            @if (!action?.icon) {\\n              <span class=\\"toolbar-action-separator\\"></span>\\n            }\\n            @if (action?.icon) {\\n              \x3c!-- <div [title]=\\"action.disabled ? action.tooltipDisabled || \'\' : \'\'\\"> --\x3e\\n              <ag-grid-toolbar-action\\n                [color]=\\"action?.color\\"\\n                [disabled]=\\"action?.disabled || false\\"\\n                [icon]=\\"action.icon\\"\\n                [id]=\\"action.id\\"\\n                [tooltip]=\\"action.tooltip || \'\'\\"\\n                (click)=\\"action?.clickFn?.({ action, event })\\"\\n              ></ag-grid-toolbar-action>\\n              \x3c!-- </div> --\x3e\\n            }\\n          }\\n          <ng-content select=\\"[actionsRight]\\"></ng-content>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\"ag-grid-content\\">\\n      <ng-content>\\n        \x3c!-- ag-grid-angular --\x3e\\n      </ng-content>\\n    </div>\\n  `,\\n})\\nexport class AgGridToolbarComponent<TData = any, TContext = any> {\\n  /** Toolbar actions */\\n  readonly actions = input<AgGridToolbarAction[]>([\\n    agGridToolbarAction.fit,\\n    agGridToolbarAction.reset,\\n    agGridToolbarAction.csv,\\n  ]);\\n  /** Debounce in ms for search input */\\n  readonly debounceSearch = input(500);\\n  /** Disable search field*/\\n  readonly disableSearch = input(false);\\n  /** Enable search field*/\\n  readonly enableSearch = input(true);\\n  /** Search placeholder text */\\n  readonly placeholderSearch = input(\'Search...\');\\n\\n  /** Grid ready event */\\n  readonly gridReady = output<AgGridEvent<TData, TContext>>();\\n\\n  readonly gridIsReady = signal(false);\\n\\n  /** Ag-grid component ref */\\n  readonly agGrid = contentChild.required(AgGridAngular);\\n\\n  private readonly elRef: ElementRef = inject(ElementRef);\\n\\n  get context(): TContext & AgGridContext {\\n    return this.agGrid().context || this.agGrid().gridOptions?.context;\\n  }\\n\\n  get event(): AgGridEvent<TData, TContext> {\\n    // this.agGrid().api.g\\n    return {\\n      api: this.agGrid().api,\\n      context: this.context,\\n    } as AgGridEvent<TData, TContext>;\\n  }\\n\\n  ngAfterContentInit(): void {\\n    firstValueFrom(this.agGrid().gridReady).then((event) => {\\n      this.gridIsReady.set(true);\\n      if (event.context) {\\n        event.context.actions = this.actions();\\n      } else {\\n        const warning =\\n          \'Missing `context` or `gridOptions.context`, some functionality will not work.\';\\n        console.warn(warning);\\n      }\\n      this.gridReady.emit(event);\\n    });\\n  }\\n\\n  ngAfterViewInit(): void {\\n    this.getAgStyles();\\n  }\\n\\n  private getAgStyles() {\\n    const element = this.elRef.nativeElement;\\n    const variableNames = [\\n      \'--ag-header-background-color\',\\n      \'--ag-wrapper-border\',\\n      \'--ag-border-color\',\\n      \'--ag-wrapper-border-radius\',\\n      \'--ag-input-disabled-background-color\',\\n      \'--ag-range-selection-border-color\',\\n    ];\\n    const agEl = element.querySelector(\'ag-grid-angular\')!;\\n    const styleEl = agEl.getElementsByTagName(\'style\')[0];\\n\\n    const computedStyles = window.getComputedStyle(styleEl);\\n\\n    variableNames.forEach((varName) => {\\n      const value = computedStyles.getPropertyValue(varName);\\n      if (value) {\\n        document.documentElement.style.setProperty(varName, value.trim());\\n      }\\n    });\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host {\\n  display: flex;\\n  height: 100%;\\n  flex-direction: column;\\n}\\n\\n:host ::ng-deep ag-grid-angular {\\n  height: 100%;\\n}\\n\\n:host ::ng-deep .ag-root-wrapper {\\n  /* Prevent themes from rounding corners on top of grid */\\n  border-top-left-radius: 0px;\\n  border-top-right-radius: 0px;\\n}\\n\\n:host ::ng-deep .ag-aria-description-container {\\n  display: none;\\n}\\n\\n.ag-grid-content {\\n  flex-grow: 1;\\n}\\n\\n.toolbar-action-separator {\\n  border-right: 2px solid var(--ag-border-color);\\n  height: 22px;\\n}\\n\\n.ag-grid-toolbar {\\n  align-items: center;\\n  background: var(--ag-header-background-color);\\n  border: var(--ag-wrapper-border);\\n  border-top-left-radius: var(--ag-wrapper-border-radius);\\n  border-top-right-radius: var(--ag-wrapper-border-radius);\\n  border-bottom: none;\\n  display: flex;\\n  height: 48px;\\n  overflow-x: auto;\\n}\\n\\n.ag-grid-toolbar-content {\\n  align-items: center;\\n  display: flex;\\n  gap: 8px;\\n  justify-content: space-between;\\n  padding: 0px 8px;\\n  width: 100%;\\n}\\n\\n.ag-grid-toolbar-content-left {\\n  align-items: center;\\n  display: flex;\\n  gap: 8px;\\n}\\n\\n.ag-grid-toolbar-content-center {\\n  align-items: center;\\n  display: flex;\\n  gap: 8px;\\n}\\n\\n.ag-grid-toolbar-content-right {\\n  align-items: center;\\n  display: flex;\\n}\\n","styleUrl":"./ag-grid-toolbar.component.css"}],"stylesData":"","extends":[],"accessors":{"context":{"name":"context","getSignature":{"name":"context","type":"","returnType":"","line":182}},"event":{"name":"event","getSignature":{"name":"event","type":"","returnType":"AgGridEvent<TData, TContext>","line":186}}}},{"name":"AgGridToolbarSearchComponent","id":"component-AgGridToolbarSearchComponent-863824d2f1884bead987c2b403dedc7b6fc87533112f05561ac53cd5dbe5dfa20998d6eed3795da42343738669cd79b46d353203ac74a3e266ea9a40aca8bf6f","file":"projects/extension-packages/ag-grid-angular/src/lib/ag-grid-toolbar/components/ag-grid-toolbar-search/ag-grid-toolbar-search.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ag-grid-toolbar-search","styleUrls":["./ag-grid-toolbar-search.component.css"],"styles":[],"template":"<input\\n  type=\\"search\\"\\n  [disabled]=\\"disabled()\\"\\n  [placeholder]=\\"placeholder()\\"\\n  (keyup)=\\"onSearch($event)\\"\\n  (search)=\\"onSearch($event)\\"\\n/>\\n","templateUrl":[],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"agGrid","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":20,"modifierKind":[148],"required":true},{"name":"debounceTime","defaultValue":"500","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":21,"modifierKind":[148],"required":false},{"name":"disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":22,"modifierKind":[148],"required":false}],"outputsClass":[],"propertiesClass":[{"name":"agGrid","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":20,"modifierKind":[148],"required":true},{"name":"debounceTime","defaultValue":"500","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":21,"modifierKind":[148],"required":false},{"name":"disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":22,"modifierKind":[148],"required":false},{"name":"placeholder","defaultValue":"input(\'Search...\')","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":23,"modifierKind":[148]}],"methodsClass":[{"name":"onSearch","args":[{"type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":30,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setQuickFilter","args":[{"name":"term","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":49,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"term","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, input } from \'@angular/core\';\\nimport { AgGridAngular } from \'ag-grid-angular\';\\n\\nlet timer: any;\\n@Component({\\n  selector: \'ag-grid-toolbar-search\',\\n  standalone: true,\\n  styleUrls: [\'./ag-grid-toolbar-search.component.css\'],\\n  template: `\\n    <input\\n      type=\\"search\\"\\n      [disabled]=\\"disabled()\\"\\n      [placeholder]=\\"placeholder()\\"\\n      (keyup)=\\"onSearch($event)\\"\\n      (search)=\\"onSearch($event)\\"\\n    />\\n  `,\\n})\\nexport class AgGridToolbarSearchComponent {\\n  readonly agGrid = input.required<AgGridAngular>();\\n  readonly debounceTime = input(500);\\n  readonly disabled = input(false);\\n  readonly placeholder = input(\'Search...\');\\n\\n  get context(): { quickFilterText: string } {\\n    const agGrid = this.agGrid();\\n    return agGrid.context || agGrid.gridOptions?.context;\\n  }\\n\\n  onSearch({ target }: any) {\\n    const { api } = this.agGrid();\\n    clearTimeout(timer);\\n    timer = setTimeout(() => {\\n      const rowModelType = api.getGridOption(\'rowModelType\');\\n      if (rowModelType === \'serverSide\') {\\n        this.setQuickFilter(target.value);\\n        api.onFilterChanged();\\n      } else {\\n        api.setGridOption(\'quickFilterText\', target.value);\\n        this.setQuickFilter(target.value);\\n      }\\n      const rowSelection = api.getGridOption(\'rowSelection\');\\n      if (rowSelection !== \'multiple\') {\\n        api.deselectAll();\\n      }\\n    }, this.debounceTime());\\n  }\\n\\n  setQuickFilter(term: string) {\\n    if (this.context) {\\n      this.context.quickFilterText = term;\\n    }\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"input {\\n  border: 1px solid var(--ag-border-color);\\n  border-radius: 4px;\\n  height: 30px;\\n  padding: 0px 8px 0px 28px;\\n  background: white url(\\"data:image/svg+xml,<svg xmlns=\'http://www.w3.org/2000/svg\' fill=\'gray\' width=\'16\' height=\'16\' viewBox=\'0 0 16 16\'><path d=\'M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\'></path></svg>\\") no-repeat 8px center;\\n}\\n\\ninput:hover:not(:disabled) {\\n  border-color: var(--ag-range-selection-border-color);\\n}\\n\\ninput:focus-visible {\\n  outline: none;\\n  border-color: var(--ag-range-selection-border-color);\\n}\\n\\ninput:disabled {\\n  background-color: var(--ag-input-disabled-background-color);\\n}\\n","styleUrl":"./ag-grid-toolbar-search.component.css"}],"stylesData":"","extends":[],"accessors":{"context":{"name":"context","getSignature":{"name":"context","type":"literal type","returnType":"literal type","line":25}}}}],"modules":[],"miscellaneous":{"variables":[{"name":"actions","ctype":"miscellaneous","subtype":"variable","file":"projects/extension-packages/ag-grid-angular/src/lib/ag-grid-toolbar/ag-grid-toolbar.stories.ts","deprecated":false,"deprecationMessage":"","type":"AgGridToolbarAction[]","defaultValue":"[\\n  {\\n    clickFn: (params) => {\\n      const { api } = params.event;\\n      const data = { id: Number((Math.random() * 1000).toFixed(0)) };\\n      const transaction = api.applyTransaction({ add: [data], addIndex: 0 });\\n      api.flashCells({ rowNodes: transaction?.add });\\n    },\\n    color: \'seagreen\',\\n    icon: \'add\',\\n    tooltip: \'Add new row\',\\n  },\\n  {\\n    clickFn: () => {\\n      alert(\'Edit action clicked\');\\n    },\\n    color: \'dodgerblue\',\\n    disabled: true,\\n    icon: \'visibility\',\\n    tooltip: \'Edit\',\\n    tooltipDisabled: \'Select a row to edit\',\\n  },\\n  {\\n    clickFn: (params) => {\\n      const { api } = params.event;\\n      const rows = api.getSelectedRows();\\n      api.applyTransaction({ remove: rows });\\n    },\\n    color: \'crimson\',\\n    disabled: true,\\n    icon: \'delete\',\\n    tooltip: \'Delete selected row(s)\',\\n    tooltipDisabled: \'Select row(s) to delete\',\\n  },\\n  {},\\n  agGridToolbarAction.copySelectedRows,\\n  agGridToolbarAction.fit,\\n  agGridToolbarAction.reset,\\n  agGridToolbarAction.csv,\\n]"},{"name":"agGridToolbarAction","ctype":"miscellaneous","subtype":"variable","file":"projects/extension-packages/ag-grid-angular/src/lib/ag-grid-toolbar/constants/ag-grid-toolbar-actions.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"{\\n  copySelectedRows: {\\n    icon: \'content_copy\',\\n    tooltip: \'Copy selected rows\',\\n    clickFn: async (params) => {\\n      const { api } = params.event;\\n      const rows = api.getSelectedRows();\\n      const jsonString = JSON.stringify(rows, null, 2);\\n      try {\\n        await navigator.clipboard.writeText(jsonString);\\n      } catch (err) {\\n        throw err;\\n      }\\n    },\\n  } as AgGridToolbarAction,\\n  csv: {\\n    icon: \'file_download\',\\n    tooltip: \'Export as csv\',\\n    clickFn: (params) => {\\n      const { api } = params.event;\\n      api.exportDataAsCsv();\\n    },\\n  } as AgGridToolbarAction,\\n  fit: {\\n    icon: \'view_column\',\\n    tooltip: \'Fit columns\',\\n    clickFn: (params) => {\\n      const { api } = params.event;\\n      api.sizeColumnsToFit();\\n    },\\n  } as AgGridToolbarAction,\\n  reset: {\\n    icon: \'history\',\\n    tooltip: \'Reset columns\',\\n    clickFn: (params) => {\\n      const { api } = params.event;\\n      api.resetColumnState();\\n    },\\n  } as AgGridToolbarAction,\\n} as const"},{"name":"ContentProjections","ctype":"miscellaneous","subtype":"variable","file":"projects/extension-packages/ag-grid-angular/src/lib/ag-grid-toolbar/ag-grid-toolbar.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    ...defaults,\\n    actions: [{}, ...actions, {}],\\n  },\\n  render: (args) => ({\\n    props: {\\n      ...args,\\n      themeMap,\\n      gridOptions,\\n    },\\n    template: `\\n    <ag-grid-toolbar\\n      [actions]=\\"null\\"\\n      [disableSearch]=\\"disableSearch\\"\\n      [debounceSearch]=\\"debounceSearch\\"\\n      [enableSearch]=\\"enableSearch\\"\\n      [placeholderSearch]=\\"placeholderSearch\\">\\n      <div toolbarLeft>toolbarLeft</div>\\n      <div toolbarCenter>toolbarCenter</div>\\n      <div toolbarRight>toolbarRight &nbsp;</div>\\n      <div actionsLeft>actionsLeft &nbsp;</div>\\n      <div actionsRight>actionsRight &nbsp;</div>\\n\\n      <ag-grid-angular [gridOptions]=\\"gridOptions\\" [theme]=\\"themeMap[agTheme]\\"></ag-grid-angular>\\n    </ag-grid-toolbar>\\n    `,\\n  }),\\n}"},{"name":"datasourceService","ctype":"miscellaneous","subtype":"variable","file":"projects/extension-packages/ag-grid-angular/src/stories/story-helpers/grid-options.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new DatasourceService()"},{"name":"defaults","ctype":"miscellaneous","subtype":"variable","file":"projects/extension-packages/ag-grid-angular/src/lib/ag-grid-toolbar/ag-grid-toolbar.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  actions: [\\n    agGridToolbarAction.fit,\\n    agGridToolbarAction.reset,\\n    agGridToolbarAction.csv,\\n  ],\\n  debounceSearch: 500,\\n  disableSearch: false,\\n  enableSearch: true,\\n  placeholderSearch: \'Search..\',\\n}"},{"name":"gridOptions","ctype":"miscellaneous","subtype":"variable","file":"projects/extension-packages/ag-grid-angular/src/stories/story-helpers/grid-options.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"gridOptionsService.clientSide()"},{"name":"gridOptionsService","ctype":"miscellaneous","subtype":"variable","file":"projects/extension-packages/ag-grid-angular/src/stories/story-helpers/grid-options.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new GridOptionsService()"},{"name":"items","ctype":"miscellaneous","subtype":"variable","file":"projects/extension-packages/ag-grid-angular/src/stories/story-helpers/datasource.service.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[]"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"projects/extension-packages/ag-grid-angular/src/lib/ag-grid-toolbar/ag-grid-toolbar.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<AgGridToolbarComponent>","defaultValue":"{\\n  title: \'Ag Grid Extension\',\\n  component: AgGridToolbarComponent,\\n  decorators: [\\n    componentWrapperDecorator(\\n      (story) => `<div style=\\"height: 500px;\\">${story}</div>`,\\n    ),\\n    moduleMetadata({\\n      imports: [AgGridModule],\\n    }),\\n  ],\\n  render: (args) => {\\n    return {\\n      props: {\\n        ...args,\\n        themeMap,\\n        gridOptions: {\\n          ...gridOptions,\\n          ...(args as any).extraGridOptions,\\n        },\\n      },\\n      template: `\\n    <ag-grid-toolbar\\n      [actions]=\\"actions\\"\\n      [disableSearch]=\\"disableSearch\\"\\n      [debounceSearch]=\\"debounceSearch\\"\\n      [enableSearch]=\\"enableSearch\\"\\n      [placeholderSearch]=\\"placeholderSearch\\">\\n      \\n      <ag-grid-angular [gridOptions]=\\"gridOptions\\" [theme]=\\"themeMap[agTheme]\\"></ag-grid-angular>\\n    </ag-grid-toolbar>\\n    `,\\n    };\\n  },\\n  tags: [\'autodocs\'],\\n}"},{"name":"preview","ctype":"miscellaneous","subtype":"variable","file":"projects/extension-packages/ag-grid-angular/.storybook/preview.ts","deprecated":false,"deprecationMessage":"","type":"Preview","defaultValue":"{\\n  args: { agTheme: \'ag-theme-alpine\' },\\n  argTypes: {\\n    agTheme: {\\n      control: { type: \'radio\' },\\n      options: [\'alpine\', \'balham\', \'material\', \'quartz\'],\\n    },\\n  },\\n  parameters: {\\n    controls: {\\n      matchers: {\\n        color: /(background|color)$/i,\\n        date: /Date$/i,\\n      },\\n    },\\n  },\\n  tags: [\'autodocs\'],\\n}"},{"name":"SearchAndActions","ctype":"miscellaneous","subtype":"variable","file":"projects/extension-packages/ag-grid-angular/src/lib/ag-grid-toolbar/ag-grid-toolbar.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    ...defaults,\\n    actions: actions,\\n  },\\n}"},{"name":"themeMap","ctype":"miscellaneous","subtype":"variable","file":"projects/extension-packages/ag-grid-angular/src/lib/ag-grid-toolbar/ag-grid-toolbar.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  alpine: themeAlpine,\\n  balham: themeBalham,\\n  material: themeMaterial,\\n  quartz: themeQuartz,\\n}"},{"name":"timer","ctype":"miscellaneous","subtype":"variable","file":"projects/extension-packages/ag-grid-angular/src/lib/ag-grid-toolbar/components/ag-grid-toolbar-search/ag-grid-toolbar-search.component.ts","deprecated":false,"deprecationMessage":"","type":"any"}],"functions":[{"name":"generateRandomBrand","file":"projects/extension-packages/ag-grid-angular/src/stories/story-helpers/datasource.service.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[]},{"name":"generateRandomModel","file":"projects/extension-packages/ag-grid-angular/src/stories/story-helpers/datasource.service.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"brand","type":"string","deprecated":false,"deprecationMessage":""}],"jsdoctags":[{"name":"brand","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"generateRandomPrice","file":"projects/extension-packages/ag-grid-angular/src/stories/story-helpers/datasource.service.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[]}],"typealiases":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<>","file":"projects/extension-packages/ag-grid-angular/src/lib/ag-grid-toolbar/ag-grid-toolbar.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"enumerations":[],"groupedVariables":{"projects/extension-packages/ag-grid-angular/src/lib/ag-grid-toolbar/ag-grid-toolbar.stories.ts":[{"name":"actions","ctype":"miscellaneous","subtype":"variable","file":"projects/extension-packages/ag-grid-angular/src/lib/ag-grid-toolbar/ag-grid-toolbar.stories.ts","deprecated":false,"deprecationMessage":"","type":"AgGridToolbarAction[]","defaultValue":"[\\n  {\\n    clickFn: (params) => {\\n      const { api } = params.event;\\n      const data = { id: Number((Math.random() * 1000).toFixed(0)) };\\n      const transaction = api.applyTransaction({ add: [data], addIndex: 0 });\\n      api.flashCells({ rowNodes: transaction?.add });\\n    },\\n    color: \'seagreen\',\\n    icon: \'add\',\\n    tooltip: \'Add new row\',\\n  },\\n  {\\n    clickFn: () => {\\n      alert(\'Edit action clicked\');\\n    },\\n    color: \'dodgerblue\',\\n    disabled: true,\\n    icon: \'visibility\',\\n    tooltip: \'Edit\',\\n    tooltipDisabled: \'Select a row to edit\',\\n  },\\n  {\\n    clickFn: (params) => {\\n      const { api } = params.event;\\n      const rows = api.getSelectedRows();\\n      api.applyTransaction({ remove: rows });\\n    },\\n    color: \'crimson\',\\n    disabled: true,\\n    icon: \'delete\',\\n    tooltip: \'Delete selected row(s)\',\\n    tooltipDisabled: \'Select row(s) to delete\',\\n  },\\n  {},\\n  agGridToolbarAction.copySelectedRows,\\n  agGridToolbarAction.fit,\\n  agGridToolbarAction.reset,\\n  agGridToolbarAction.csv,\\n]"},{"name":"ContentProjections","ctype":"miscellaneous","subtype":"variable","file":"projects/extension-packages/ag-grid-angular/src/lib/ag-grid-toolbar/ag-grid-toolbar.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    ...defaults,\\n    actions: [{}, ...actions, {}],\\n  },\\n  render: (args) => ({\\n    props: {\\n      ...args,\\n      themeMap,\\n      gridOptions,\\n    },\\n    template: `\\n    <ag-grid-toolbar\\n      [actions]=\\"null\\"\\n      [disableSearch]=\\"disableSearch\\"\\n      [debounceSearch]=\\"debounceSearch\\"\\n      [enableSearch]=\\"enableSearch\\"\\n      [placeholderSearch]=\\"placeholderSearch\\">\\n      <div toolbarLeft>toolbarLeft</div>\\n      <div toolbarCenter>toolbarCenter</div>\\n      <div toolbarRight>toolbarRight &nbsp;</div>\\n      <div actionsLeft>actionsLeft &nbsp;</div>\\n      <div actionsRight>actionsRight &nbsp;</div>\\n\\n      <ag-grid-angular [gridOptions]=\\"gridOptions\\" [theme]=\\"themeMap[agTheme]\\"></ag-grid-angular>\\n    </ag-grid-toolbar>\\n    `,\\n  }),\\n}"},{"name":"defaults","ctype":"miscellaneous","subtype":"variable","file":"projects/extension-packages/ag-grid-angular/src/lib/ag-grid-toolbar/ag-grid-toolbar.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  actions: [\\n    agGridToolbarAction.fit,\\n    agGridToolbarAction.reset,\\n    agGridToolbarAction.csv,\\n  ],\\n  debounceSearch: 500,\\n  disableSearch: false,\\n  enableSearch: true,\\n  placeholderSearch: \'Search..\',\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"projects/extension-packages/ag-grid-angular/src/lib/ag-grid-toolbar/ag-grid-toolbar.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<AgGridToolbarComponent>","defaultValue":"{\\n  title: \'Ag Grid Extension\',\\n  component: AgGridToolbarComponent,\\n  decorators: [\\n    componentWrapperDecorator(\\n      (story) => `<div style=\\"height: 500px;\\">${story}</div>`,\\n    ),\\n    moduleMetadata({\\n      imports: [AgGridModule],\\n    }),\\n  ],\\n  render: (args) => {\\n    return {\\n      props: {\\n        ...args,\\n        themeMap,\\n        gridOptions: {\\n          ...gridOptions,\\n          ...(args as any).extraGridOptions,\\n        },\\n      },\\n      template: `\\n    <ag-grid-toolbar\\n      [actions]=\\"actions\\"\\n      [disableSearch]=\\"disableSearch\\"\\n      [debounceSearch]=\\"debounceSearch\\"\\n      [enableSearch]=\\"enableSearch\\"\\n      [placeholderSearch]=\\"placeholderSearch\\">\\n      \\n      <ag-grid-angular [gridOptions]=\\"gridOptions\\" [theme]=\\"themeMap[agTheme]\\"></ag-grid-angular>\\n    </ag-grid-toolbar>\\n    `,\\n    };\\n  },\\n  tags: [\'autodocs\'],\\n}"},{"name":"SearchAndActions","ctype":"miscellaneous","subtype":"variable","file":"projects/extension-packages/ag-grid-angular/src/lib/ag-grid-toolbar/ag-grid-toolbar.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    ...defaults,\\n    actions: actions,\\n  },\\n}"},{"name":"themeMap","ctype":"miscellaneous","subtype":"variable","file":"projects/extension-packages/ag-grid-angular/src/lib/ag-grid-toolbar/ag-grid-toolbar.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  alpine: themeAlpine,\\n  balham: themeBalham,\\n  material: themeMaterial,\\n  quartz: themeQuartz,\\n}"}],"projects/extension-packages/ag-grid-angular/src/lib/ag-grid-toolbar/constants/ag-grid-toolbar-actions.ts":[{"name":"agGridToolbarAction","ctype":"miscellaneous","subtype":"variable","file":"projects/extension-packages/ag-grid-angular/src/lib/ag-grid-toolbar/constants/ag-grid-toolbar-actions.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"{\\n  copySelectedRows: {\\n    icon: \'content_copy\',\\n    tooltip: \'Copy selected rows\',\\n    clickFn: async (params) => {\\n      const { api } = params.event;\\n      const rows = api.getSelectedRows();\\n      const jsonString = JSON.stringify(rows, null, 2);\\n      try {\\n        await navigator.clipboard.writeText(jsonString);\\n      } catch (err) {\\n        throw err;\\n      }\\n    },\\n  } as AgGridToolbarAction,\\n  csv: {\\n    icon: \'file_download\',\\n    tooltip: \'Export as csv\',\\n    clickFn: (params) => {\\n      const { api } = params.event;\\n      api.exportDataAsCsv();\\n    },\\n  } as AgGridToolbarAction,\\n  fit: {\\n    icon: \'view_column\',\\n    tooltip: \'Fit columns\',\\n    clickFn: (params) => {\\n      const { api } = params.event;\\n      api.sizeColumnsToFit();\\n    },\\n  } as AgGridToolbarAction,\\n  reset: {\\n    icon: \'history\',\\n    tooltip: \'Reset columns\',\\n    clickFn: (params) => {\\n      const { api } = params.event;\\n      api.resetColumnState();\\n    },\\n  } as AgGridToolbarAction,\\n} as const"}],"projects/extension-packages/ag-grid-angular/src/stories/story-helpers/grid-options.ts":[{"name":"datasourceService","ctype":"miscellaneous","subtype":"variable","file":"projects/extension-packages/ag-grid-angular/src/stories/story-helpers/grid-options.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new DatasourceService()"},{"name":"gridOptions","ctype":"miscellaneous","subtype":"variable","file":"projects/extension-packages/ag-grid-angular/src/stories/story-helpers/grid-options.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"gridOptionsService.clientSide()"},{"name":"gridOptionsService","ctype":"miscellaneous","subtype":"variable","file":"projects/extension-packages/ag-grid-angular/src/stories/story-helpers/grid-options.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new GridOptionsService()"}],"projects/extension-packages/ag-grid-angular/src/stories/story-helpers/datasource.service.ts":[{"name":"items","ctype":"miscellaneous","subtype":"variable","file":"projects/extension-packages/ag-grid-angular/src/stories/story-helpers/datasource.service.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[]"}],"projects/extension-packages/ag-grid-angular/.storybook/preview.ts":[{"name":"preview","ctype":"miscellaneous","subtype":"variable","file":"projects/extension-packages/ag-grid-angular/.storybook/preview.ts","deprecated":false,"deprecationMessage":"","type":"Preview","defaultValue":"{\\n  args: { agTheme: \'ag-theme-alpine\' },\\n  argTypes: {\\n    agTheme: {\\n      control: { type: \'radio\' },\\n      options: [\'alpine\', \'balham\', \'material\', \'quartz\'],\\n    },\\n  },\\n  parameters: {\\n    controls: {\\n      matchers: {\\n        color: /(background|color)$/i,\\n        date: /Date$/i,\\n      },\\n    },\\n  },\\n  tags: [\'autodocs\'],\\n}"}],"projects/extension-packages/ag-grid-angular/src/lib/ag-grid-toolbar/components/ag-grid-toolbar-search/ag-grid-toolbar-search.component.ts":[{"name":"timer","ctype":"miscellaneous","subtype":"variable","file":"projects/extension-packages/ag-grid-angular/src/lib/ag-grid-toolbar/components/ag-grid-toolbar-search/ag-grid-toolbar-search.component.ts","deprecated":false,"deprecationMessage":"","type":"any"}]},"groupedFunctions":{"projects/extension-packages/ag-grid-angular/src/stories/story-helpers/datasource.service.ts":[{"name":"generateRandomBrand","file":"projects/extension-packages/ag-grid-angular/src/stories/story-helpers/datasource.service.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[]},{"name":"generateRandomModel","file":"projects/extension-packages/ag-grid-angular/src/stories/story-helpers/datasource.service.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"brand","type":"string","deprecated":false,"deprecationMessage":""}],"jsdoctags":[{"name":"brand","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"generateRandomPrice","file":"projects/extension-packages/ag-grid-angular/src/stories/story-helpers/datasource.service.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[]}]},"groupedEnumerations":{},"groupedTypeAliases":{"projects/extension-packages/ag-grid-angular/src/lib/ag-grid-toolbar/ag-grid-toolbar.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<>","file":"projects/extension-packages/ag-grid-angular/src/lib/ag-grid-toolbar/ag-grid-toolbar.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}]}},"routes":[],"coverage":{"count":10,"status":"low","files":[{"filePath":"projects/extension-packages/ag-grid-angular/.storybook/preview.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"preview","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/extension-packages/ag-grid-angular/src/lib/ag-grid-toolbar/ag-grid-toolbar.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"actions","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/extension-packages/ag-grid-angular/src/lib/ag-grid-toolbar/ag-grid-toolbar.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"ContentProjections","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/extension-packages/ag-grid-angular/src/lib/ag-grid-toolbar/ag-grid-toolbar.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"defaults","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/extension-packages/ag-grid-angular/src/lib/ag-grid-toolbar/ag-grid-toolbar.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/extension-packages/ag-grid-angular/src/lib/ag-grid-toolbar/ag-grid-toolbar.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"SearchAndActions","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/extension-packages/ag-grid-angular/src/lib/ag-grid-toolbar/ag-grid-toolbar.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"themeMap","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/extension-packages/ag-grid-angular/src/lib/ag-grid-toolbar/components/ag-grid-toolbar-action/ag-grid-toolbar-action.component.ts","type":"component","linktype":"component","name":"AgGridToolbarActionComponent","coveragePercent":41,"coverageCount":"5/12","status":"medium"},{"filePath":"projects/extension-packages/ag-grid-angular/src/lib/ag-grid-toolbar/components/ag-grid-toolbar-search/ag-grid-toolbar-search.component.ts","type":"component","linktype":"component","name":"AgGridToolbarSearchComponent","coveragePercent":0,"coverageCount":"0/10","status":"low"},{"filePath":"projects/extension-packages/ag-grid-angular/src/lib/ag-grid-toolbar/components/ag-grid-toolbar-search/ag-grid-toolbar-search.component.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"timer","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/extension-packages/ag-grid-angular/src/lib/ag-grid-toolbar/components/ag-grid-toolbar/ag-grid-toolbar.component.ts","type":"component","linktype":"component","name":"AgGridToolbarComponent","coveragePercent":68,"coverageCount":"11/16","status":"good"},{"filePath":"projects/extension-packages/ag-grid-angular/src/lib/ag-grid-toolbar/constants/ag-grid-toolbar-actions.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"agGridToolbarAction","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/extension-packages/ag-grid-angular/src/lib/ag-grid-toolbar/interfaces/ag-grid-context.ts","type":"interface","linktype":"interface","name":"AgGridContext","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"projects/extension-packages/ag-grid-angular/src/lib/ag-grid-toolbar/interfaces/ag-grid-toolbar-action.ts","type":"interface","linktype":"interface","name":"AgGridToolbarAction","coveragePercent":88,"coverageCount":"8/9","status":"very-good"},{"filePath":"projects/extension-packages/ag-grid-angular/src/lib/ag-grid-toolbar/interfaces/ag-grid-toolbar-action.ts","type":"interface","linktype":"interface","name":"AgGridToolbarActionClickParams","coveragePercent":66,"coverageCount":"2/3","status":"good"},{"filePath":"projects/extension-packages/ag-grid-angular/src/lib/ag-grid-toolbar/utils/utils.ts","type":"class","linktype":"classe","name":"Utils","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"projects/extension-packages/ag-grid-angular/src/stories/story-helpers/datasource.service.ts","type":"injectable","linktype":"injectable","name":"DatasourceService","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"projects/extension-packages/ag-grid-angular/src/stories/story-helpers/datasource.service.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"generateRandomBrand","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/extension-packages/ag-grid-angular/src/stories/story-helpers/datasource.service.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"generateRandomModel","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/extension-packages/ag-grid-angular/src/stories/story-helpers/datasource.service.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"generateRandomPrice","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/extension-packages/ag-grid-angular/src/stories/story-helpers/datasource.service.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"items","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/extension-packages/ag-grid-angular/src/stories/story-helpers/grid-options.service.ts","type":"injectable","linktype":"injectable","name":"GridOptionsService","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"projects/extension-packages/ag-grid-angular/src/stories/story-helpers/grid-options.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"datasourceService","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/extension-packages/ag-grid-angular/src/stories/story-helpers/grid-options.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"gridOptions","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/extension-packages/ag-grid-angular/src/stories/story-helpers/grid-options.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"gridOptionsService","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/extension-packages/ag-grid-angular/src/stories/story-helpers/utils.ts","type":"class","linktype":"classe","name":"Utils","coveragePercent":0,"coverageCount":"0/2","status":"low"}]}}');(0,angular.$)(documentation_namespaceObject);const _storybook_preview={args:{agTheme:"ag-theme-alpine"},argTypes:{agTheme:{control:{type:"radio"},options:["alpine","balham","material","quartz"]}},parameters:{controls:{matchers:{color:/(background|color)$/i,date:/Date$/i}}},tags:["autodocs"]}},"./storybook-config-entry.js":(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";var external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global"),external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("@storybook/preview-api"),external_STORYBOOK_MODULE_CHANNELS_=__webpack_require__("@storybook/channels"),asyncToGenerator=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js");const pipeline=x=>x(),importers=[function(){var _ref=(0,asyncToGenerator.A)((function*(path){if(!/^\.[\\/](?:projects\/extension-packages\/ag-grid-angular\/src(?:\/(?!\.)(?:(?:(?!(?:^|\/)\.).)*?)\/|\/|$)(?!\.)(?=.)[^/]*?\.mdx)$/.exec(path))return;const pathRemainder=path.substring(50);return __webpack_require__("./projects/extension-packages/ag-grid-angular/src lazy recursive ^\\.\\/.*$ include: (?%21.*node_modules)(?:\\/projects\\/extension-packages\\/ag-grid-angular\\/src(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.mdx)$")("./"+pathRemainder)}));return function(_x){return _ref.apply(this,arguments)}}(),function(){var _ref2=(0,asyncToGenerator.A)((function*(path){if(!/^\.[\\/](?:projects\/extension-packages\/ag-grid-angular\/src(?:\/(?!\.)(?:(?:(?!(?:^|\/)\.).)*?)\/|\/|$)(?!\.)(?=.)[^/]*?\.stories\.(js|jsx|mjs|ts|tsx))$/.exec(path))return;const pathRemainder=path.substring(50);return __webpack_require__("./projects/extension-packages/ag-grid-angular/src lazy recursive ^\\.\\/.*$ include: (?%21.*node_modules)(?:\\/projects\\/extension-packages\\/ag-grid-angular\\/src(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cmjs%7Cts%7Ctsx))$")("./"+pathRemainder)}));return function(_x2){return _ref2.apply(this,arguments)}}()];function _importFn(){return(_importFn=(0,asyncToGenerator.A)((function*(path){for(let i=0;i<importers.length;i++){const moduleExports=yield pipeline((()=>importers[i](path)));if(moduleExports)return moduleExports}}))).apply(this,arguments)}const channel=(0,external_STORYBOOK_MODULE_CHANNELS_.createBrowserChannel)({page:"preview"});external_STORYBOOK_MODULE_PREVIEW_API_.addons.setChannel(channel),"DEVELOPMENT"===external_STORYBOOK_MODULE_GLOBAL_.global.CONFIG_TYPE&&(window.__STORYBOOK_SERVER_CHANNEL__=channel);const preview=new external_STORYBOOK_MODULE_PREVIEW_API_.PreviewWeb((function importFn(_x3){return _importFn.apply(this,arguments)}),(()=>(0,external_STORYBOOK_MODULE_PREVIEW_API_.composeConfigs)([__webpack_require__("./node_modules/@storybook/angular/dist/client/preview-prod.js"),__webpack_require__("./node_modules/@storybook/angular/dist/client/docs/config.js"),__webpack_require__("./node_modules/@storybook/angular/dist/client/config.js"),__webpack_require__("./node_modules/@storybook/addon-links/dist/preview.mjs"),__webpack_require__("./node_modules/@storybook/addon-essentials/dist/docs/preview.mjs"),__webpack_require__("./node_modules/@storybook/addon-essentials/dist/actions/preview.mjs"),__webpack_require__("./node_modules/@storybook/addon-essentials/dist/backgrounds/preview.mjs"),__webpack_require__("./node_modules/@storybook/addon-essentials/dist/viewport/preview.mjs"),__webpack_require__("./node_modules/@storybook/addon-essentials/dist/measure/preview.mjs"),__webpack_require__("./node_modules/@storybook/addon-essentials/dist/outline/preview.mjs"),__webpack_require__("./node_modules/@storybook/addon-essentials/dist/highlight/preview.mjs"),__webpack_require__("./node_modules/@storybook/addon-interactions/dist/preview.mjs"),__webpack_require__("./projects/extension-packages/ag-grid-angular/.storybook/preview.ts")])));window.__STORYBOOK_PREVIEW__=preview,window.__STORYBOOK_STORY_STORE__=preview.storyStore,window.__STORYBOOK_ADDONS_CHANNEL__=channel},"./node_modules/@storybook/instrumenter/dist sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/@storybook/instrumenter/dist sync recursive",module.exports=webpackEmptyContext},"./node_modules/memoizerific sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/memoizerific sync recursive",module.exports=webpackEmptyContext},"./projects/extension-packages/ag-grid-angular/src lazy recursive ^\\.\\/.*$ include: (?%21.*node_modules)(?:\\/projects\\/extension-packages\\/ag-grid-angular\\/src(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.mdx)$":module=>{function webpackEmptyAsyncContext(req){return Promise.resolve().then((()=>{var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}))}webpackEmptyAsyncContext.keys=()=>[],webpackEmptyAsyncContext.resolve=webpackEmptyAsyncContext,webpackEmptyAsyncContext.id="./projects/extension-packages/ag-grid-angular/src lazy recursive ^\\.\\/.*$ include: (?%21.*node_modules)(?:\\/projects\\/extension-packages\\/ag-grid-angular\\/src(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.mdx)$",module.exports=webpackEmptyAsyncContext},"./projects/extension-packages/ag-grid-angular/src lazy recursive ^\\.\\/.*$ include: (?%21.*node_modules)(?:\\/projects\\/extension-packages\\/ag-grid-angular\\/src(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cmjs%7Cts%7Ctsx))$":(module,__unused_webpack_exports,__webpack_require__)=>{var map={"./lib/ag-grid-toolbar/ag-grid-toolbar.stories":["./projects/extension-packages/ag-grid-angular/src/lib/ag-grid-toolbar/ag-grid-toolbar.stories.ts",508,28],"./lib/ag-grid-toolbar/ag-grid-toolbar.stories.ts":["./projects/extension-packages/ag-grid-angular/src/lib/ag-grid-toolbar/ag-grid-toolbar.stories.ts",508,28]};function webpackAsyncContext(req){if(!__webpack_require__.o(map,req))return Promise.resolve().then((()=>{var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}));var ids=map[req],id=ids[0];return Promise.all(ids.slice(1).map(__webpack_require__.e)).then((()=>__webpack_require__(id)))}webpackAsyncContext.keys=()=>Object.keys(map),webpackAsyncContext.id="./projects/extension-packages/ag-grid-angular/src lazy recursive ^\\.\\/.*$ include: (?%21.*node_modules)(?:\\/projects\\/extension-packages\\/ag-grid-angular\\/src(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cmjs%7Cts%7Ctsx))$",module.exports=webpackAsyncContext},"@storybook/channels":module=>{"use strict";module.exports=__STORYBOOK_MODULE_CHANNELS__},"@storybook/client-logger":module=>{"use strict";module.exports=__STORYBOOK_MODULE_CLIENT_LOGGER__},"@storybook/core-events/preview-errors":module=>{"use strict";module.exports=__STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS__},"@storybook/core-events":module=>{"use strict";module.exports=__STORYBOOK_MODULE_CORE_EVENTS__},"@storybook/global":module=>{"use strict";module.exports=__STORYBOOK_MODULE_GLOBAL__},"@storybook/preview-api":module=>{"use strict";module.exports=__STORYBOOK_MODULE_PREVIEW_API__}},__webpack_require__=>{var __webpack_exec__=moduleId=>__webpack_require__(__webpack_require__.s=moduleId);__webpack_require__.O(0,[533],(()=>(__webpack_exec__("./storybook-config-entry.js"),__webpack_exec__("./node_modules/@angular/compiler/fesm2022/compiler.mjs"))));__webpack_require__.O()}]);